{"version":3,"sources":["components/layouts/img/paper.png","components/layouts/categoryURL.js","components/layouts/Logo.js","pages/Home.js","components/layouts/NavbarLogo.js","components/Navbar.js","components/layouts/Button.js","redux/actions/dataActions.js","redux/types.js","redux/actions/userActions.js","pages/AuthForm.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/reducers/dataReducer.js","redux/store.js","components/layouts/Card.js","components/InformCard.js","pages/Table.js","pages/Diagrams.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","title","url","Logo","id","width","height","viewBox","fill","xmlns","filter","fillRule","clipRule","d","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dy","stdDeviation","mode","in2","x1","y1","x2","y2","gradientUnits","offset","stopColor","stopOpacity","Home","className","Circle","cx","cy","r","styled","div","NavbarLogo","Navbar","useState","isHamburger","setIsHamburger","authenticated","useSelector","state","user","onClick","exact","to","activeClassName","style","color","Button","button","getData","dispatch","axios","get","then","res","payload","data","catch","err","console","log","getUser","defaults","headers","common","localStorage","getItem","undefined","setAuthorizationHeader","token","DBAuthToken","setItem","logOutUser","removeItem","firebase","initializeApp","apiKey","authDomain","AuthForm","toggleSlides","setToggleSlides","history","useHistory","ui","useDispatch","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","seeText","setSeeText","seeConfirmText","setSeeConfirmText","signIn","setSignIn","uiConfig","signInFloe","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","callbacks","signInSuccess","useEffect","error","code","onAuthStateChanged","firebaseAuth","onSubmit","event","preventDefault","userData","post","push","response","signUpUser","provider","addScope","signInWithPopup","credential","accessToken","jwtDecode","message","general","fontSize","account","value","onChange","target","placeholder","marginBottom","loading","marginTop","loginUser","initialState","info","credentials","reducers","combineReducers","action","item","middleware","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","Card","handleImageChange","image","files","formData","FormData","append","uploadImage","CardContainer","display","justifyContent","alignItems","transition","src","imageUrl","alt","moment","createdAt","fromNow","hidden","document","getElementById","click","diary","useStyles","makeStyles","root","maxWidth","container","input","background","padding","margin","border","borderRadius","backgroundColor","fontFamily","join","letterSpacing","textAlign","InformCard","props","classes","category","open","setOpen","openCalendar","setOpenCalendar","length","Dialog","onClose","fullWidth","DialogTitle","DialogContent","FormControl","description","Select","labelId","label","MenuItem","format","disabled","cursor","date","Date","price","DialogActions","e","minWidth","bar","minHeight","marginLeft","balance","toolbar","search","inputInput","inputRoot","textOverflow","whiteSpace","overflow","cell","row","boxShadow","transform","tableImg","headTable","addTable","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setId","toolBtn","setToolBtn","AppBar","position","Toolbar","InputBase","inputProps","Typography","variant","noWrap","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","index","TableCell","key","align","TableBody","slice","hover","role","tabIndex","itemId","data-id","parentNode","getAttribute","profit","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","Diagrams","charData","labels","datasets","forEach","options","maintainAspectRatio","baseURL","exp","now","location","href","App","path","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f878ca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paper.44bf012b.png\";","module.exports = [\n  {\n    title: \"Other\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fother.png?alt=media&token=b97f7178-9385-4d20-b44d-85dccf4f61ad\",\n  },\n  {\n    title: \"Accessories\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Faccessories.png?alt=media&token=4d8750aa-94e7-4148-a85a-9c4083f113ad\",\n  },\n  {\n    title: \"Bills\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fbills.png?alt=media&token=ab1472eb-6a7f-4f66-a5ea-3782bf4a16ce\",\n  },\n  {\n    title: \"Clothes\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fclothes.png?alt=media&token=bf42da54-40df-4940-9bce-6736f7ebea17\",\n  },\n  {\n    title: \"Electronics\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Felectronics.png?alt=media&token=d2560043-da15-48ef-a783-2eaf19702a3d\",\n  },\n  {\n    title: \"Food\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Ffood.png?alt=media&token=35eab14d-e007-40e2-a9e3-8bcec7b6cebf\",\n  },\n  {\n    title: \"Pets\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fpets.png?alt=media&token=680a3ef4-1114-451f-8065-030fc813967c\",\n  },\n  {\n    title: \"Restaurant\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Frestaurant.png?alt=media&token=bdd4529d-6f26-4dd2-9ddf-9302613eec5e\",\n  },\n  {\n    title: \"Salary\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fsalary.png?alt=media&token=ef489740-d882-4d1c-a360-1a882adf91b2\",\n  },\n  {\n    title: \"Sport\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fsport%20.png?alt=media&token=764585e3-56f1-48bb-9870-0b2d58a20cd3\",\n  },\n  {\n    title: \"Vacation\",\n    url:\n      \"https://firebasestorage.googleapis.com/v0/b/make-and-save-c1e7a.appspot.com/o/category%2Fvacation.png?alt=media&token=9f4f9c68-24e7-4e42-89f7-486a9d77761d\",\n  }\n];","import React from 'react'\n\nexport const Logo = () => {\n\t\treturn (\n\t\t<>\n\t\t\t\t<svg id=\"logo\" width=\"871\" height=\"141\" viewBox=\"0 0 871 141\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<g filter=\"url(#filter0_d)\">\n\t\t\t\t\t\t<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M146.405 111H129.445V64.36C129.445 56.804 127.559 51.3741 124.094 47.7401L124.077 47.7229L124.061 47.7053C120.662 43.9665 116.005 42.024 109.845 42.024C103.504 42.024 98.6484 44.0555 95.0501 47.9965L95.0427 48.0046L95.0352 48.0126C91.4658 51.8371 89.5251 57.5604 89.5251 65.512V111H72.5651V64.36C72.5651 56.804 70.6786 51.3741 67.2136 47.7401L67.1972 47.7229L67.1812 47.7053C63.7823 43.9665 59.1249 42.024 52.9651 42.024C46.6244 42.024 41.7684 44.0555 38.1701 47.9965L38.1627 48.0046L38.1552 48.0126C34.5858 51.8371 32.6451 57.5604 32.6451 65.512V111H15.5411V28.088H32.6451V35.6708C34.7869 33.4573 37.2749 31.6246 40.1029 30.1791L40.1108 30.1751L40.1187 30.1711C44.8315 27.8147 49.9887 26.648 55.5571 26.648C62.4911 26.648 68.704 28.2091 74.1349 31.3856C78.4471 33.9079 81.8852 37.3601 84.4477 41.7007C86.8303 37.5068 90.1576 34.1122 94.4114 31.5439C99.8272 28.274 105.852 26.648 112.437 26.648C118.865 26.648 124.666 28.0052 129.79 30.769C134.961 33.4614 139.026 37.5473 141.984 42.952C144.965 48.4008 146.405 54.9414 146.405 62.488V111ZM178.278 32.1081L178.285 32.1044C184.366 28.5568 191.101 26.792 198.445 26.792C205.65 26.792 212.011 28.3456 217.454 31.5296C220.731 33.4463 223.527 35.6845 225.821 38.2494V28.088H243.069V111H225.821V100.537C223.45 103.209 220.562 105.546 217.176 107.553L217.166 107.558C211.727 110.74 205.415 112.296 198.301 112.296C190.947 112.296 184.246 110.478 178.251 106.819C172.258 103.163 167.55 98.036 164.128 91.495C160.696 84.9332 159.005 77.504 159.005 69.256C159.005 60.9208 160.693 53.5298 164.137 47.1447C167.563 40.6981 172.276 35.6689 178.272 32.1119L178.278 32.1081ZM213.429 45.5008L213.406 45.4866C209.697 43.279 205.589 42.168 201.036 42.168C196.469 42.168 192.35 43.2387 188.637 45.3605C184.954 47.465 181.991 50.5416 179.754 54.659C177.54 58.7323 176.396 63.5761 176.396 69.256C176.396 75.0331 177.541 79.9769 179.758 84.1495C181.996 88.263 184.961 91.3913 188.652 93.5923C192.361 95.7083 196.475 96.776 201.036 96.776C205.601 96.776 209.718 95.7066 213.43 93.5872C217.218 91.383 220.226 88.2546 222.459 84.1495C224.679 79.9725 225.821 75.0753 225.821 69.4C225.821 63.7201 224.677 58.8763 222.463 54.803C220.232 50.6976 217.23 47.6221 213.454 45.5144L213.429 45.5008ZM306.379 111L278.317 79.4144V111H261.213V0.440002H278.317V59.7262L305.789 28.088H329.631L290.587 69.4024L329.764 111H306.379ZM410.694 76.44H348.007C348.774 82.7575 351.167 87.6374 355.077 91.2423C359.582 95.2106 365.002 97.208 371.45 97.208C376.806 97.208 381.086 95.9857 384.421 93.6774C387.915 91.2303 390.341 88.0226 391.737 84.007L392.204 82.664H410.371L409.665 85.2005C407.434 93.2107 402.955 99.7726 396.274 104.834L396.266 104.84L396.259 104.846C389.515 109.852 381.203 112.296 371.45 112.296C363.652 112.296 356.587 110.543 350.307 106.998L350.295 106.991C344.107 103.44 339.242 98.4144 335.712 91.9596L335.705 91.9482C332.166 85.3753 330.426 77.8405 330.426 69.4C330.426 60.9695 332.114 53.4848 335.556 47.0057C338.993 40.5364 343.821 35.5462 350.024 32.0874C356.311 28.5399 363.471 26.792 371.45 26.792C379.238 26.792 386.21 28.4922 392.308 31.948C398.388 35.3929 403.073 40.1739 406.326 46.2653C409.672 52.255 411.322 59.0238 411.322 66.52C411.322 69.0924 411.174 71.8015 410.88 74.6458L410.694 76.44ZM390.77 52.0138L390.763 52.0036C388.757 48.6894 386.029 46.222 382.544 44.5666L382.517 44.5535L382.49 44.5396C379.054 42.7779 375.196 41.88 370.874 41.88C364.722 41.88 359.543 43.8242 355.226 47.6971C351.5 51.1165 349.129 55.7616 348.216 61.784H393.721C393.465 57.9738 392.464 54.7391 390.776 52.0239L390.77 52.0138ZM502.824 111L490.553 98.5934C485.917 103.119 480.961 106.585 475.677 108.953L475.664 108.959L475.651 108.965C469.797 111.488 463.233 112.728 455.995 112.728C448.84 112.728 442.401 111.435 436.721 108.798L436.708 108.792C431.114 106.148 426.691 102.355 423.499 97.4131L423.491 97.4006L423.483 97.388C420.38 92.422 418.859 86.6686 418.859 80.2C418.859 72.7907 420.949 66.2209 425.16 60.5727L425.163 60.568C429.01 55.4393 434.404 51.362 441.248 48.2867C438.947 45.3212 437.191 42.4975 436.019 39.8176C434.555 36.4713 433.835 32.8354 433.835 28.936C433.835 24.3607 434.984 20.1953 437.31 16.4957L437.314 16.4894L437.318 16.4832C439.745 12.6839 443.165 9.75637 447.503 7.69028C451.849 5.62112 456.807 4.616 462.331 4.616C467.776 4.616 472.619 5.67591 476.797 7.8692C480.973 10.0615 484.154 13.1744 486.273 17.1959C488.376 21.0928 489.303 25.4374 489.097 30.1749L489.014 32.088H471.946L471.996 30.0392C472.082 26.5238 471.106 24.0469 469.299 22.316L469.284 22.3013L469.269 22.2862C467.386 20.4036 464.942 19.416 461.755 19.416C458.322 19.416 455.716 20.3906 453.749 22.1999L453.747 22.2023C451.889 23.9048 450.939 26.0895 450.939 28.936C450.939 31.4341 451.599 33.8711 452.967 36.2729C454.489 38.7744 457.055 41.9532 460.741 45.8294L488.922 74.146L490.151 72.2346L500.507 54.872H519.22L505.687 78.306L505.682 78.3152C504.257 80.8301 502.621 83.4435 500.779 86.1548L525.624 111H502.824ZM469.094 94.6709L469.102 94.667C472.579 93.0074 475.93 90.5224 479.147 87.1657L451.908 59.7936C446.594 61.9848 442.708 64.6875 440.113 67.8295C437.354 71.1705 435.963 75.1174 435.963 79.768C435.963 84.8902 437.758 89.0545 441.363 92.4063C445.06 95.7553 449.878 97.496 455.995 97.496C460.914 97.496 465.264 96.5411 469.086 94.6749L469.094 94.6709ZM543.946 109.109L543.931 109.103C538.866 106.874 534.787 103.798 531.77 99.8454L531.763 99.8354L531.755 99.8254C528.732 95.7592 527.067 91.1115 526.756 85.9358L526.629 83.816H544.103L544.279 85.6218C544.606 88.9773 546.129 91.6945 548.964 93.8669C551.891 96.0366 555.802 97.208 560.864 97.208C565.579 97.208 569.035 96.1646 571.456 94.3088C573.888 92.4443 574.992 90.2265 574.992 87.544C574.992 86.1201 574.679 84.99 574.128 84.0777C573.577 83.1648 572.718 82.3538 571.446 81.6782L571.425 81.6669L571.404 81.6552C568.566 80.0589 564.02 78.4302 557.636 76.8106L557.629 76.8086L557.621 76.8066C551.717 75.2579 546.825 73.696 542.969 72.1143L542.94 72.1024L542.912 72.0896C538.994 70.3372 535.593 67.8094 532.719 64.525L532.697 64.5001L532.676 64.4745C529.727 60.869 528.336 56.2583 528.336 50.824C528.336 46.3645 529.673 42.264 532.309 38.5735C534.949 34.877 538.662 32.0289 543.346 29.9892C548.059 27.8409 553.384 26.792 559.28 26.792C568.358 26.792 575.9 29.0919 581.718 33.8705C587.578 38.6842 590.677 45.2832 591.086 53.4601L591.191 55.56H574.119L573.989 53.6992C573.738 50.0952 572.304 47.3056 569.683 45.1762L569.671 45.1664L569.659 45.1564C567.142 43.0454 563.614 41.88 558.848 41.88C554.414 41.88 551.127 42.8313 548.789 44.5239C546.492 46.1872 545.44 48.2403 545.44 50.824C545.44 52.9342 546.081 54.5756 547.305 55.8905C548.82 57.3112 550.695 58.5125 552.962 59.4764C555.473 60.404 558.947 61.4849 563.408 62.7188C569.11 64.2652 573.809 65.8269 577.478 67.4114C581.322 68.9739 584.602 71.3712 587.297 74.5811C590.252 77.9809 591.705 82.3478 591.808 87.504L591.808 87.524V87.544C591.808 92.2602 590.49 96.5484 587.851 100.349C585.216 104.143 581.507 107.093 576.815 109.235L576.806 109.24L576.797 109.244C572.175 111.298 566.898 112.296 561.008 112.296C554.737 112.296 549.044 111.25 543.962 109.116L543.946 109.109ZM620.685 32.1081L620.691 32.1044C626.773 28.5568 633.507 26.792 640.851 26.792C648.056 26.792 654.417 28.3456 659.861 31.5296C663.137 33.4463 665.933 35.6845 668.227 38.2494V28.088H685.475V111H668.227V100.537C665.856 103.209 662.968 105.546 659.582 107.553L659.573 107.558C654.133 110.74 647.821 112.296 640.707 112.296C633.353 112.296 626.653 110.478 620.657 106.819C614.664 103.163 609.956 98.036 606.535 91.495C603.102 84.9332 601.411 77.504 601.411 69.256C601.411 60.9191 603.099 53.5268 606.545 47.1407L620.685 32.1081ZM655.836 45.5008L655.812 45.4866C652.103 43.279 647.995 42.168 643.443 42.168C638.875 42.168 634.756 43.2387 631.043 45.3605C627.36 47.465 624.398 50.5416 622.16 54.659C619.946 58.7323 618.803 63.5761 618.803 69.256C618.803 75.0347 619.947 79.9796 622.166 84.1529C624.404 88.2646 627.368 91.3921 631.059 93.5924C634.768 95.7083 638.882 96.776 643.443 96.776C648.008 96.776 652.126 95.7063 655.838 93.5862C659.626 91.3819 662.633 88.2534 664.866 84.1483C667.085 79.9716 668.227 75.0747 668.227 69.4C668.227 63.7201 667.083 58.8763 664.87 54.803C662.638 50.6976 659.636 47.6221 655.86 45.5144L655.836 45.5008ZM758.078 28.088H776.376L743.847 111H725.856L693.326 28.088H711.766L734.99 91.1053L758.078 28.088ZM859.71 76.44H797.023C797.789 82.7568 800.182 87.6363 804.092 91.2411C808.597 95.2101 814.017 97.208 820.466 97.208C825.822 97.208 830.102 95.9857 833.437 93.6774C836.93 91.2304 839.356 88.0226 840.753 84.007L841.22 82.664H859.387L858.681 85.2005C856.45 93.2107 851.971 99.7726 845.29 104.834L845.282 104.84L845.274 104.846C838.531 109.852 830.218 112.296 820.466 112.296C812.667 112.296 805.603 110.543 799.323 106.998L799.311 106.991C793.123 103.44 788.257 98.4144 784.727 91.9596L784.721 91.9482C781.182 85.3753 779.442 77.8405 779.442 69.4C779.442 60.9695 781.13 53.4848 784.572 47.0057C788.008 40.5382 792.834 35.5491 799.035 32.0904C805.323 28.5409 812.485 26.792 820.466 26.792C828.254 26.792 835.226 28.4922 841.324 31.948C847.403 35.3927 852.088 40.1733 855.341 46.2641C858.687 52.2541 860.338 59.0232 860.338 66.52C860.338 69.0924 860.19 71.8015 859.895 74.6458L859.71 76.44ZM839.785 52.0138L839.779 52.0036C837.773 48.6894 835.045 46.222 831.56 44.5666L831.532 44.5535L831.505 44.5396C828.07 42.7779 824.211 41.88 819.89 41.88C813.737 41.88 808.559 43.8242 804.242 47.697C800.515 51.1164 798.145 55.7617 797.231 61.784H842.736C842.48 57.9738 841.479 54.7391 839.791 52.0239L839.785 52.0138ZM4.45312 121.4H866.53V132.6H4.45312V121.4ZM128.853 32.536C124.053 29.944 118.581 28.648 112.437 28.648C106.197 28.648 100.533 30.184 95.4451 33.256C90.3571 36.328 86.7091 40.648 84.5011 46.216C82.0051 40.456 78.2131 36.088 73.1251 33.112C68.0371 30.136 62.1811 28.648 55.5571 28.648C50.2771 28.648 45.4291 29.752 41.0131 31.96C36.6931 34.168 33.2371 37.336 30.6451 41.464V30.088H17.5411V109H30.6451V65.512C30.6451 57.256 32.6611 50.968 36.6931 46.648C40.7251 42.232 46.1491 40.024 52.9651 40.024C59.5891 40.024 64.8211 42.136 68.6611 46.36C72.5971 50.488 74.5651 56.488 74.5651 64.36V109H87.5251V65.512C87.5251 57.256 89.5411 50.968 93.5731 46.648C97.6051 42.232 103.029 40.024 109.845 40.024C116.469 40.024 121.701 42.136 125.541 46.36C129.477 50.488 131.445 56.488 131.445 64.36V109H144.405V62.488C144.405 55.192 143.013 49 140.229 43.912C137.445 38.824 133.653 35.032 128.853 32.536ZM165.9 48.088C162.637 54.136 161.005 61.192 161.005 69.256C161.005 77.224 162.637 84.328 165.9 90.568C169.165 96.808 173.628 101.656 179.292 105.112C184.956 108.568 191.292 110.296 198.301 110.296C205.117 110.296 211.068 108.808 216.157 105.832C221.34 102.76 225.229 98.92 227.821 94.312V109H241.069V30.088H227.821V44.488C225.325 39.976 221.533 36.232 216.445 33.256C211.357 30.28 205.357 28.792 198.445 28.792C191.436 28.792 185.053 30.472 179.292 33.832C173.628 37.192 169.165 41.944 165.9 48.088ZM224.221 53.848C226.62 58.264 227.821 63.448 227.821 69.4C227.821 75.352 226.62 80.584 224.221 85.096C221.82 89.512 218.557 92.92 214.428 95.32C210.396 97.624 205.932 98.776 201.036 98.776C196.141 98.776 191.676 97.624 187.645 95.32C183.613 92.92 180.396 89.512 177.997 85.096C175.596 80.584 174.396 75.304 174.396 69.256C174.396 63.304 175.596 58.12 177.997 53.704C180.396 49.288 183.613 45.928 187.645 43.624C191.676 41.32 196.141 40.168 201.036 40.168C205.932 40.168 210.396 41.368 214.428 43.768C218.557 46.072 221.82 49.432 224.221 53.848ZM276.317 74.152L307.277 109H325.133L287.837 69.4L324.989 30.088H306.701L276.317 65.08V2.44H263.213V109H276.317V74.152ZM408.89 74.44C409.178 71.656 409.322 69.016 409.322 66.52C409.322 59.32 407.738 52.888 404.57 47.224C401.498 41.464 397.082 36.952 391.322 33.688C385.562 30.424 378.938 28.792 371.45 28.792C363.77 28.792 356.954 30.472 351.002 33.832C345.146 37.096 340.586 41.8 337.322 47.944C334.058 54.088 332.426 61.24 332.426 69.4C332.426 77.56 334.106 84.76 337.466 91C340.826 97.144 345.434 101.896 351.29 105.256C357.242 108.616 363.962 110.296 371.45 110.296C380.858 110.296 388.73 107.944 395.066 103.24C401.402 98.44 405.626 92.248 407.738 84.664H393.626C392.09 89.08 389.402 92.632 385.562 95.32C381.818 97.912 377.114 99.208 371.45 99.208C364.538 99.208 358.634 97.048 353.738 92.728C348.938 88.312 346.298 82.216 345.818 74.44H408.89ZM392.474 50.968C394.682 54.52 395.786 58.792 395.786 63.784H345.962C346.634 56.296 349.274 50.44 353.882 46.216C358.586 41.992 364.25 39.88 370.874 39.88C375.482 39.88 379.658 40.84 383.402 42.76C387.242 44.584 390.266 47.32 392.474 50.968ZM490.555 95.752L503.659 109H520.795L498.187 86.392C500.395 83.224 502.315 80.2 503.947 77.32L515.755 56.872H501.643L491.851 73.288L489.259 77.32L459.307 47.224C455.563 43.288 452.875 39.976 451.243 37.288C449.707 34.6 448.939 31.816 448.939 28.936C448.939 25.576 450.091 22.84 452.395 20.728C454.795 18.52 457.915 17.416 461.755 17.416C465.403 17.416 468.379 18.568 470.683 20.872C472.987 23.08 474.091 26.152 473.995 30.088H487.099C487.291 25.672 486.427 21.688 484.507 18.136C482.587 14.488 479.707 11.656 475.867 9.64C472.027 7.624 467.515 6.616 462.331 6.616C457.051 6.616 452.395 7.576 448.363 9.496C444.331 11.416 441.211 14.104 439.003 17.56C436.891 20.92 435.835 24.712 435.835 28.936C435.835 32.584 436.507 35.944 437.851 39.016C439.195 42.088 441.403 45.448 444.475 49.096C436.699 52.168 430.795 56.392 426.763 61.768C422.827 67.048 420.859 73.192 420.859 80.2C420.859 86.344 422.299 91.72 425.179 96.328C428.155 100.936 432.283 104.488 437.563 106.984C442.939 109.48 449.083 110.728 455.995 110.728C463.003 110.728 469.291 109.528 474.859 107.128C480.427 104.632 485.659 100.84 490.555 95.752ZM469.963 96.472C465.835 98.488 461.179 99.496 455.995 99.496C449.467 99.496 444.139 97.624 440.011 93.88C435.979 90.136 433.963 85.432 433.963 79.768C433.963 69.592 440.107 62.152 452.395 57.448L481.915 87.112C478.171 91.336 474.187 94.456 469.963 96.472ZM544.736 107.272C549.536 109.288 554.96 110.296 561.008 110.296C566.672 110.296 571.664 109.336 575.984 107.416C580.4 105.4 583.808 102.664 586.208 99.208C588.608 95.752 589.808 91.864 589.808 87.544C589.712 82.744 588.368 78.856 585.776 75.88C583.28 72.904 580.256 70.696 576.704 69.256C573.152 67.72 568.544 66.184 562.88 64.648C558.368 63.4 554.816 62.296 552.224 61.336C549.728 60.28 547.616 58.936 545.888 57.304C544.256 55.576 543.44 53.416 543.44 50.824C543.44 47.56 544.832 44.92 547.616 42.904C550.4 40.888 554.144 39.88 558.848 39.88C563.936 39.88 567.968 41.128 570.944 43.624C574.016 46.12 575.696 49.432 575.984 53.56H589.088C588.704 45.88 585.824 39.832 580.448 35.416C575.072 31 568.016 28.792 559.28 28.792C553.616 28.792 548.576 29.8 544.16 31.816C539.744 33.736 536.336 36.376 533.936 39.736C531.536 43.096 530.336 46.792 530.336 50.824C530.336 55.912 531.632 60.04 534.224 63.208C536.912 66.28 540.08 68.632 543.728 70.264C547.472 71.8 552.272 73.336 558.128 74.872C564.56 76.504 569.312 78.184 572.384 79.912C575.456 81.544 576.992 84.088 576.992 87.544C576.992 90.904 575.552 93.688 572.672 95.896C569.792 98.104 565.856 99.208 560.864 99.208C555.488 99.208 551.12 97.96 547.76 95.464C544.496 92.968 542.672 89.752 542.288 85.816H528.752C529.04 90.616 530.576 94.888 533.36 98.632C536.144 102.28 539.936 105.16 544.736 107.272ZM608.307 48.088C605.043 54.136 603.411 61.192 603.411 69.256C603.411 77.224 605.043 84.328 608.307 90.568C611.571 96.808 616.035 101.656 621.699 105.112C627.363 108.568 633.699 110.296 640.707 110.296C647.523 110.296 653.475 108.808 658.563 105.832C663.747 102.76 667.635 98.92 670.227 94.312V109H683.475V30.088H670.227V44.488C667.731 39.976 663.939 36.232 658.851 33.256C653.763 30.28 647.763 28.792 640.851 28.792C633.843 28.792 627.459 30.472 621.699 33.832C616.035 37.192 611.571 41.944 608.307 48.088ZM666.627 53.848C669.027 58.264 670.227 63.448 670.227 69.4C670.227 75.352 669.027 80.584 666.627 85.096C664.227 89.512 660.963 92.92 656.835 95.32C652.803 97.624 648.339 98.776 643.443 98.776C638.547 98.776 634.083 97.624 630.051 95.32C626.019 92.92 622.803 89.512 620.403 85.096C618.003 80.584 616.803 75.304 616.803 69.256C616.803 63.304 618.003 58.12 620.403 53.704C622.803 49.288 626.019 45.928 630.051 43.624C634.083 41.32 638.547 40.168 643.443 40.168C648.339 40.168 652.803 41.368 656.835 43.768C660.963 46.072 664.227 49.432 666.627 53.848ZM759.475 30.088L734.995 96.904L710.371 30.088H696.259L727.219 109H742.483L773.443 30.088H759.475ZM857.906 74.44C858.194 71.656 858.338 69.016 858.338 66.52C858.338 59.32 856.754 52.888 853.586 47.224C850.514 41.464 846.098 36.952 840.338 33.688C834.578 30.424 827.954 28.792 820.466 28.792C812.786 28.792 805.97 30.472 800.018 33.832C794.162 37.096 789.602 41.8 786.338 47.944C783.074 54.088 781.442 61.24 781.442 69.4C781.442 77.56 783.122 84.76 786.482 91C789.842 97.144 794.45 101.896 800.306 105.256C806.258 108.616 812.978 110.296 820.466 110.296C829.874 110.296 837.746 107.944 844.082 103.24C850.418 98.44 854.642 92.248 856.754 84.664H842.642C841.106 89.08 838.418 92.632 834.578 95.32C830.834 97.912 826.13 99.208 820.466 99.208C813.554 99.208 807.65 97.048 802.754 92.728C797.954 88.312 795.314 82.216 794.834 74.44H857.906ZM841.49 50.968C843.698 54.52 844.802 58.792 844.802 63.784H794.978C795.65 56.296 798.29 50.44 802.898 46.216C807.602 41.992 813.266 39.88 819.89 39.88C824.498 39.88 828.674 40.84 832.418 42.76C836.258 44.584 839.282 47.32 841.49 50.968ZM864.53 123.4H6.45312V130.6H864.53V123.4Z\" fill=\"white\" />\n\t\t\t\t\t\t<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M146.405 111H129.445V64.36C129.445 56.804 127.559 51.3741 124.094 47.7401L124.077 47.7229L124.061 47.7053C120.662 43.9665 116.005 42.024 109.845 42.024C103.504 42.024 98.6484 44.0555 95.0501 47.9965L95.0427 48.0046L95.0352 48.0126C91.4658 51.8371 89.5251 57.5604 89.5251 65.512V111H72.5651V64.36C72.5651 56.804 70.6786 51.3741 67.2136 47.7401L67.1972 47.7229L67.1812 47.7053C63.7823 43.9665 59.1249 42.024 52.9651 42.024C46.6244 42.024 41.7684 44.0555 38.1701 47.9965L38.1627 48.0046L38.1552 48.0126C34.5858 51.8371 32.6451 57.5604 32.6451 65.512V111H15.5411V28.088H32.6451V35.6708C34.7869 33.4573 37.2749 31.6246 40.1029 30.1791L40.1108 30.1751L40.1187 30.1711C44.8315 27.8147 49.9887 26.648 55.5571 26.648C62.4911 26.648 68.704 28.2091 74.1349 31.3856C78.4471 33.9079 81.8852 37.3601 84.4477 41.7007C86.8303 37.5068 90.1576 34.1122 94.4114 31.5439C99.8272 28.274 105.852 26.648 112.437 26.648C118.865 26.648 124.666 28.0052 129.79 30.769C134.961 33.4614 139.026 37.5473 141.984 42.952C144.965 48.4008 146.405 54.9414 146.405 62.488V111ZM178.278 32.1081L178.285 32.1044C184.366 28.5568 191.101 26.792 198.445 26.792C205.65 26.792 212.011 28.3456 217.454 31.5296C220.731 33.4463 223.527 35.6845 225.821 38.2494V28.088H243.069V111H225.821V100.537C223.45 103.209 220.562 105.546 217.176 107.553L217.166 107.558C211.727 110.74 205.415 112.296 198.301 112.296C190.947 112.296 184.246 110.478 178.251 106.819C172.258 103.163 167.55 98.036 164.128 91.495C160.696 84.9332 159.005 77.504 159.005 69.256C159.005 60.9208 160.693 53.5298 164.137 47.1447C167.563 40.6981 172.276 35.6689 178.272 32.1119L178.278 32.1081ZM213.429 45.5008L213.406 45.4866C209.697 43.279 205.589 42.168 201.036 42.168C196.469 42.168 192.35 43.2387 188.637 45.3605C184.954 47.465 181.991 50.5416 179.754 54.659C177.54 58.7323 176.396 63.5761 176.396 69.256C176.396 75.0331 177.541 79.9769 179.758 84.1495C181.996 88.263 184.961 91.3913 188.652 93.5923C192.361 95.7083 196.475 96.776 201.036 96.776C205.601 96.776 209.718 95.7066 213.43 93.5872C217.218 91.383 220.226 88.2546 222.459 84.1495C224.679 79.9725 225.821 75.0753 225.821 69.4C225.821 63.7201 224.677 58.8763 222.463 54.803C220.232 50.6976 217.23 47.6221 213.454 45.5144L213.429 45.5008ZM306.379 111L278.317 79.4144V111H261.213V0.440002H278.317V59.7262L305.789 28.088H329.631L290.587 69.4024L329.764 111H306.379ZM410.694 76.44H348.007C348.774 82.7575 351.167 87.6374 355.077 91.2423C359.582 95.2106 365.002 97.208 371.45 97.208C376.806 97.208 381.086 95.9857 384.421 93.6774C387.915 91.2303 390.341 88.0226 391.737 84.007L392.204 82.664H410.371L409.665 85.2005C407.434 93.2107 402.955 99.7726 396.274 104.834L396.266 104.84L396.259 104.846C389.515 109.852 381.203 112.296 371.45 112.296C363.652 112.296 356.587 110.543 350.307 106.998L350.295 106.991C344.107 103.44 339.242 98.4144 335.712 91.9596L335.705 91.9482C332.166 85.3753 330.426 77.8405 330.426 69.4C330.426 60.9695 332.114 53.4848 335.556 47.0057C338.993 40.5364 343.821 35.5462 350.024 32.0874C356.311 28.5399 363.471 26.792 371.45 26.792C379.238 26.792 386.21 28.4922 392.308 31.948C398.388 35.3929 403.073 40.1739 406.326 46.2653C409.672 52.255 411.322 59.0238 411.322 66.52C411.322 69.0924 411.174 71.8015 410.88 74.6458L410.694 76.44ZM390.77 52.0138L390.763 52.0036C388.757 48.6894 386.029 46.222 382.544 44.5666L382.517 44.5535L382.49 44.5396C379.054 42.7779 375.196 41.88 370.874 41.88C364.722 41.88 359.543 43.8242 355.226 47.6971C351.5 51.1165 349.129 55.7616 348.216 61.784H393.721C393.465 57.9738 392.464 54.7391 390.776 52.0239L390.77 52.0138ZM502.824 111L490.553 98.5934C485.917 103.119 480.961 106.585 475.677 108.953L475.664 108.959L475.651 108.965C469.797 111.488 463.233 112.728 455.995 112.728C448.84 112.728 442.401 111.435 436.721 108.798L436.708 108.792C431.114 106.148 426.691 102.355 423.499 97.4131L423.491 97.4006L423.483 97.388C420.38 92.422 418.859 86.6686 418.859 80.2C418.859 72.7907 420.949 66.2209 425.16 60.5727L425.163 60.568C429.01 55.4393 434.404 51.362 441.248 48.2867C438.947 45.3212 437.191 42.4975 436.019 39.8176C434.555 36.4713 433.835 32.8354 433.835 28.936C433.835 24.3607 434.984 20.1953 437.31 16.4957L437.314 16.4894L437.318 16.4832C439.745 12.6839 443.165 9.75637 447.503 7.69028C451.849 5.62112 456.807 4.616 462.331 4.616C467.776 4.616 472.619 5.67591 476.797 7.8692C480.973 10.0615 484.154 13.1744 486.273 17.1959C488.376 21.0928 489.303 25.4374 489.097 30.1749L489.014 32.088H471.946L471.996 30.0392C472.082 26.5238 471.106 24.0469 469.299 22.316L469.284 22.3013L469.269 22.2862C467.386 20.4036 464.942 19.416 461.755 19.416C458.322 19.416 455.716 20.3906 453.749 22.1999L453.747 22.2023C451.889 23.9048 450.939 26.0895 450.939 28.936C450.939 31.4341 451.599 33.8711 452.967 36.2729C454.489 38.7744 457.055 41.9532 460.741 45.8294L488.922 74.146L490.151 72.2346L500.507 54.872H519.22L505.687 78.306L505.682 78.3152C504.257 80.8301 502.621 83.4435 500.779 86.1548L525.624 111H502.824ZM469.094 94.6709L469.102 94.667C472.579 93.0074 475.93 90.5224 479.147 87.1657L451.908 59.7936C446.594 61.9848 442.708 64.6875 440.113 67.8295C437.354 71.1705 435.963 75.1174 435.963 79.768C435.963 84.8902 437.758 89.0545 441.363 92.4063C445.06 95.7553 449.878 97.496 455.995 97.496C460.914 97.496 465.264 96.5411 469.086 94.6749L469.094 94.6709ZM543.946 109.109L543.931 109.103C538.866 106.874 534.787 103.798 531.77 99.8454L531.763 99.8354L531.755 99.8254C528.732 95.7592 527.067 91.1115 526.756 85.9358L526.629 83.816H544.103L544.279 85.6218C544.606 88.9773 546.129 91.6945 548.964 93.8669C551.891 96.0366 555.802 97.208 560.864 97.208C565.579 97.208 569.035 96.1646 571.456 94.3088C573.888 92.4443 574.992 90.2265 574.992 87.544C574.992 86.1201 574.679 84.99 574.128 84.0777C573.577 83.1648 572.718 82.3538 571.446 81.6782L571.425 81.6669L571.404 81.6552C568.566 80.0589 564.02 78.4302 557.636 76.8106L557.629 76.8086L557.621 76.8066C551.717 75.2579 546.825 73.696 542.969 72.1143L542.94 72.1024L542.912 72.0896C538.994 70.3372 535.593 67.8094 532.719 64.525L532.697 64.5001L532.676 64.4745C529.727 60.869 528.336 56.2583 528.336 50.824C528.336 46.3645 529.673 42.264 532.309 38.5735C534.949 34.877 538.662 32.0289 543.346 29.9892C548.059 27.8409 553.384 26.792 559.28 26.792C568.358 26.792 575.9 29.0919 581.718 33.8705C587.578 38.6842 590.677 45.2832 591.086 53.4601L591.191 55.56H574.119L573.989 53.6992C573.738 50.0952 572.304 47.3056 569.683 45.1762L569.671 45.1664L569.659 45.1564C567.142 43.0454 563.614 41.88 558.848 41.88C554.414 41.88 551.127 42.8313 548.789 44.5239C546.492 46.1872 545.44 48.2403 545.44 50.824C545.44 52.9342 546.081 54.5756 547.305 55.8905C548.82 57.3112 550.695 58.5125 552.962 59.4764C555.473 60.404 558.947 61.4849 563.408 62.7188C569.11 64.2652 573.809 65.8269 577.478 67.4114C581.322 68.9739 584.602 71.3712 587.297 74.5811C590.252 77.9809 591.705 82.3478 591.808 87.504L591.808 87.524V87.544C591.808 92.2602 590.49 96.5484 587.851 100.349C585.216 104.143 581.507 107.093 576.815 109.235L576.806 109.24L576.797 109.244C572.175 111.298 566.898 112.296 561.008 112.296C554.737 112.296 549.044 111.25 543.962 109.116L543.946 109.109ZM620.685 32.1081L620.691 32.1044C626.773 28.5568 633.507 26.792 640.851 26.792C648.056 26.792 654.417 28.3456 659.861 31.5296C663.137 33.4463 665.933 35.6845 668.227 38.2494V28.088H685.475V111H668.227V100.537C665.856 103.209 662.968 105.546 659.582 107.553L659.573 107.558C654.133 110.74 647.821 112.296 640.707 112.296C633.353 112.296 626.653 110.478 620.657 106.819C614.664 103.163 609.956 98.036 606.535 91.495C603.102 84.9332 601.411 77.504 601.411 69.256C601.411 60.9191 603.099 53.5268 606.545 47.1407L620.685 32.1081ZM655.836 45.5008L655.812 45.4866C652.103 43.279 647.995 42.168 643.443 42.168C638.875 42.168 634.756 43.2387 631.043 45.3605C627.36 47.465 624.398 50.5416 622.16 54.659C619.946 58.7323 618.803 63.5761 618.803 69.256C618.803 75.0347 619.947 79.9796 622.166 84.1529C624.404 88.2646 627.368 91.3921 631.059 93.5924C634.768 95.7083 638.882 96.776 643.443 96.776C648.008 96.776 652.126 95.7063 655.838 93.5862C659.626 91.3819 662.633 88.2534 664.866 84.1483C667.085 79.9716 668.227 75.0747 668.227 69.4C668.227 63.7201 667.083 58.8763 664.87 54.803C662.638 50.6976 659.636 47.6221 655.86 45.5144L655.836 45.5008ZM758.078 28.088H776.376L743.847 111H725.856L693.326 28.088H711.766L734.99 91.1053L758.078 28.088ZM859.71 76.44H797.023C797.789 82.7568 800.182 87.6363 804.092 91.2411C808.597 95.2101 814.017 97.208 820.466 97.208C825.822 97.208 830.102 95.9857 833.437 93.6774C836.93 91.2304 839.356 88.0226 840.753 84.007L841.22 82.664H859.387L858.681 85.2005C856.45 93.2107 851.971 99.7726 845.29 104.834L845.282 104.84L845.274 104.846C838.531 109.852 830.218 112.296 820.466 112.296C812.667 112.296 805.603 110.543 799.323 106.998L799.311 106.991C793.123 103.44 788.257 98.4144 784.727 91.9596L784.721 91.9482C781.182 85.3753 779.442 77.8405 779.442 69.4C779.442 60.9695 781.13 53.4848 784.572 47.0057C788.008 40.5382 792.834 35.5491 799.035 32.0904C805.323 28.5409 812.485 26.792 820.466 26.792C828.254 26.792 835.226 28.4922 841.324 31.948C847.403 35.3927 852.088 40.1733 855.341 46.2641C858.687 52.2541 860.338 59.0232 860.338 66.52C860.338 69.0924 860.19 71.8015 859.895 74.6458L859.71 76.44ZM839.785 52.0138L839.779 52.0036C837.773 48.6894 835.045 46.222 831.56 44.5666L831.532 44.5535L831.505 44.5396C828.07 42.7779 824.211 41.88 819.89 41.88C813.737 41.88 808.559 43.8242 804.242 47.697C800.515 51.1164 798.145 55.7617 797.231 61.784H842.736C842.48 57.9738 841.479 54.7391 839.791 52.0239L839.785 52.0138ZM4.45312 121.4H866.53V132.6H4.45312V121.4ZM128.853 32.536C124.053 29.944 118.581 28.648 112.437 28.648C106.197 28.648 100.533 30.184 95.4451 33.256C90.3571 36.328 86.7091 40.648 84.5011 46.216C82.0051 40.456 78.2131 36.088 73.1251 33.112C68.0371 30.136 62.1811 28.648 55.5571 28.648C50.2771 28.648 45.4291 29.752 41.0131 31.96C36.6931 34.168 33.2371 37.336 30.6451 41.464V30.088H17.5411V109H30.6451V65.512C30.6451 57.256 32.6611 50.968 36.6931 46.648C40.7251 42.232 46.1491 40.024 52.9651 40.024C59.5891 40.024 64.8211 42.136 68.6611 46.36C72.5971 50.488 74.5651 56.488 74.5651 64.36V109H87.5251V65.512C87.5251 57.256 89.5411 50.968 93.5731 46.648C97.6051 42.232 103.029 40.024 109.845 40.024C116.469 40.024 121.701 42.136 125.541 46.36C129.477 50.488 131.445 56.488 131.445 64.36V109H144.405V62.488C144.405 55.192 143.013 49 140.229 43.912C137.445 38.824 133.653 35.032 128.853 32.536ZM165.9 48.088C162.637 54.136 161.005 61.192 161.005 69.256C161.005 77.224 162.637 84.328 165.9 90.568C169.165 96.808 173.628 101.656 179.292 105.112C184.956 108.568 191.292 110.296 198.301 110.296C205.117 110.296 211.068 108.808 216.157 105.832C221.34 102.76 225.229 98.92 227.821 94.312V109H241.069V30.088H227.821V44.488C225.325 39.976 221.533 36.232 216.445 33.256C211.357 30.28 205.357 28.792 198.445 28.792C191.436 28.792 185.053 30.472 179.292 33.832C173.628 37.192 169.165 41.944 165.9 48.088ZM224.221 53.848C226.62 58.264 227.821 63.448 227.821 69.4C227.821 75.352 226.62 80.584 224.221 85.096C221.82 89.512 218.557 92.92 214.428 95.32C210.396 97.624 205.932 98.776 201.036 98.776C196.141 98.776 191.676 97.624 187.645 95.32C183.613 92.92 180.396 89.512 177.997 85.096C175.596 80.584 174.396 75.304 174.396 69.256C174.396 63.304 175.596 58.12 177.997 53.704C180.396 49.288 183.613 45.928 187.645 43.624C191.676 41.32 196.141 40.168 201.036 40.168C205.932 40.168 210.396 41.368 214.428 43.768C218.557 46.072 221.82 49.432 224.221 53.848ZM276.317 74.152L307.277 109H325.133L287.837 69.4L324.989 30.088H306.701L276.317 65.08V2.44H263.213V109H276.317V74.152ZM408.89 74.44C409.178 71.656 409.322 69.016 409.322 66.52C409.322 59.32 407.738 52.888 404.57 47.224C401.498 41.464 397.082 36.952 391.322 33.688C385.562 30.424 378.938 28.792 371.45 28.792C363.77 28.792 356.954 30.472 351.002 33.832C345.146 37.096 340.586 41.8 337.322 47.944C334.058 54.088 332.426 61.24 332.426 69.4C332.426 77.56 334.106 84.76 337.466 91C340.826 97.144 345.434 101.896 351.29 105.256C357.242 108.616 363.962 110.296 371.45 110.296C380.858 110.296 388.73 107.944 395.066 103.24C401.402 98.44 405.626 92.248 407.738 84.664H393.626C392.09 89.08 389.402 92.632 385.562 95.32C381.818 97.912 377.114 99.208 371.45 99.208C364.538 99.208 358.634 97.048 353.738 92.728C348.938 88.312 346.298 82.216 345.818 74.44H408.89ZM392.474 50.968C394.682 54.52 395.786 58.792 395.786 63.784H345.962C346.634 56.296 349.274 50.44 353.882 46.216C358.586 41.992 364.25 39.88 370.874 39.88C375.482 39.88 379.658 40.84 383.402 42.76C387.242 44.584 390.266 47.32 392.474 50.968ZM490.555 95.752L503.659 109H520.795L498.187 86.392C500.395 83.224 502.315 80.2 503.947 77.32L515.755 56.872H501.643L491.851 73.288L489.259 77.32L459.307 47.224C455.563 43.288 452.875 39.976 451.243 37.288C449.707 34.6 448.939 31.816 448.939 28.936C448.939 25.576 450.091 22.84 452.395 20.728C454.795 18.52 457.915 17.416 461.755 17.416C465.403 17.416 468.379 18.568 470.683 20.872C472.987 23.08 474.091 26.152 473.995 30.088H487.099C487.291 25.672 486.427 21.688 484.507 18.136C482.587 14.488 479.707 11.656 475.867 9.64C472.027 7.624 467.515 6.616 462.331 6.616C457.051 6.616 452.395 7.576 448.363 9.496C444.331 11.416 441.211 14.104 439.003 17.56C436.891 20.92 435.835 24.712 435.835 28.936C435.835 32.584 436.507 35.944 437.851 39.016C439.195 42.088 441.403 45.448 444.475 49.096C436.699 52.168 430.795 56.392 426.763 61.768C422.827 67.048 420.859 73.192 420.859 80.2C420.859 86.344 422.299 91.72 425.179 96.328C428.155 100.936 432.283 104.488 437.563 106.984C442.939 109.48 449.083 110.728 455.995 110.728C463.003 110.728 469.291 109.528 474.859 107.128C480.427 104.632 485.659 100.84 490.555 95.752ZM469.963 96.472C465.835 98.488 461.179 99.496 455.995 99.496C449.467 99.496 444.139 97.624 440.011 93.88C435.979 90.136 433.963 85.432 433.963 79.768C433.963 69.592 440.107 62.152 452.395 57.448L481.915 87.112C478.171 91.336 474.187 94.456 469.963 96.472ZM544.736 107.272C549.536 109.288 554.96 110.296 561.008 110.296C566.672 110.296 571.664 109.336 575.984 107.416C580.4 105.4 583.808 102.664 586.208 99.208C588.608 95.752 589.808 91.864 589.808 87.544C589.712 82.744 588.368 78.856 585.776 75.88C583.28 72.904 580.256 70.696 576.704 69.256C573.152 67.72 568.544 66.184 562.88 64.648C558.368 63.4 554.816 62.296 552.224 61.336C549.728 60.28 547.616 58.936 545.888 57.304C544.256 55.576 543.44 53.416 543.44 50.824C543.44 47.56 544.832 44.92 547.616 42.904C550.4 40.888 554.144 39.88 558.848 39.88C563.936 39.88 567.968 41.128 570.944 43.624C574.016 46.12 575.696 49.432 575.984 53.56H589.088C588.704 45.88 585.824 39.832 580.448 35.416C575.072 31 568.016 28.792 559.28 28.792C553.616 28.792 548.576 29.8 544.16 31.816C539.744 33.736 536.336 36.376 533.936 39.736C531.536 43.096 530.336 46.792 530.336 50.824C530.336 55.912 531.632 60.04 534.224 63.208C536.912 66.28 540.08 68.632 543.728 70.264C547.472 71.8 552.272 73.336 558.128 74.872C564.56 76.504 569.312 78.184 572.384 79.912C575.456 81.544 576.992 84.088 576.992 87.544C576.992 90.904 575.552 93.688 572.672 95.896C569.792 98.104 565.856 99.208 560.864 99.208C555.488 99.208 551.12 97.96 547.76 95.464C544.496 92.968 542.672 89.752 542.288 85.816H528.752C529.04 90.616 530.576 94.888 533.36 98.632C536.144 102.28 539.936 105.16 544.736 107.272ZM608.307 48.088C605.043 54.136 603.411 61.192 603.411 69.256C603.411 77.224 605.043 84.328 608.307 90.568C611.571 96.808 616.035 101.656 621.699 105.112C627.363 108.568 633.699 110.296 640.707 110.296C647.523 110.296 653.475 108.808 658.563 105.832C663.747 102.76 667.635 98.92 670.227 94.312V109H683.475V30.088H670.227V44.488C667.731 39.976 663.939 36.232 658.851 33.256C653.763 30.28 647.763 28.792 640.851 28.792C633.843 28.792 627.459 30.472 621.699 33.832C616.035 37.192 611.571 41.944 608.307 48.088ZM666.627 53.848C669.027 58.264 670.227 63.448 670.227 69.4C670.227 75.352 669.027 80.584 666.627 85.096C664.227 89.512 660.963 92.92 656.835 95.32C652.803 97.624 648.339 98.776 643.443 98.776C638.547 98.776 634.083 97.624 630.051 95.32C626.019 92.92 622.803 89.512 620.403 85.096C618.003 80.584 616.803 75.304 616.803 69.256C616.803 63.304 618.003 58.12 620.403 53.704C622.803 49.288 626.019 45.928 630.051 43.624C634.083 41.32 638.547 40.168 643.443 40.168C648.339 40.168 652.803 41.368 656.835 43.768C660.963 46.072 664.227 49.432 666.627 53.848ZM759.475 30.088L734.995 96.904L710.371 30.088H696.259L727.219 109H742.483L773.443 30.088H759.475ZM857.906 74.44C858.194 71.656 858.338 69.016 858.338 66.52C858.338 59.32 856.754 52.888 853.586 47.224C850.514 41.464 846.098 36.952 840.338 33.688C834.578 30.424 827.954 28.792 820.466 28.792C812.786 28.792 805.97 30.472 800.018 33.832C794.162 37.096 789.602 41.8 786.338 47.944C783.074 54.088 781.442 61.24 781.442 69.4C781.442 77.56 783.122 84.76 786.482 91C789.842 97.144 794.45 101.896 800.306 105.256C806.258 108.616 812.978 110.296 820.466 110.296C829.874 110.296 837.746 107.944 844.082 103.24C850.418 98.44 854.642 92.248 856.754 84.664H842.642C841.106 89.08 838.418 92.632 834.578 95.32C830.834 97.912 826.13 99.208 820.466 99.208C813.554 99.208 807.65 97.048 802.754 92.728C797.954 88.312 795.314 82.216 794.834 74.44H857.906ZM841.49 50.968C843.698 54.52 844.802 58.792 844.802 63.784H794.978C795.65 56.296 798.29 50.44 802.898 46.216C807.602 41.992 813.266 39.88 819.89 39.88C824.498 39.88 828.674 40.84 832.418 42.76C836.258 44.584 839.282 47.32 841.49 50.968ZM864.53 123.4H6.45312V130.6H864.53V123.4Z\" fill=\"url(#paint0_linear)\" />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t<filter id=\"filter0_d\" x=\"0.453125\" y=\"0.440002\" width=\"870.077\" height=\"140.16\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\n\t\t\t\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n\t\t\t\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n\t\t\t\t\t\t\t\t<feOffset dy=\"4\" />\n\t\t\t\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\n\t\t\t\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n\t\t\t\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\n\t\t\t\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\n\t\t\t\t\t\t\t</filter>\n\t\t\t\t\t\t\t<linearGradient id=\"paint0_linear\" x1=\"435.492\" y1=\"0.440002\" x2=\"435.492\" y2=\"132.6\" gradientUnits=\"userSpaceOnUse\">\n\t\t\t\t\t\t\t\t<stop offset=\"0.390133\" stopColor=\"#75BE5C\" />\n\t\t\t\t\t\t\t\t<stop offset=\"0.753329\" stopColor=\"white\" stopOpacity=\"0\" />\n\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t</defs>\n\t\t\t\t</svg>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { Logo } from '../components/layouts/Logo'\nimport styled from \"styled-components\"\n\nexport default function Home() {\n\treturn (\n\t\t<>\n\t\t\t<section className=\"landing\">\n\t\t\t\t<Logo />\n\t\t\t\t<Circle>\n\t\t\t\t\t<svg className=\"svg\" width=\"400\" height=\"297\" viewBox=\"0 0 200 197\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t<circle cx=\"72\" cy=\"72\" r=\"72\" fill=\"#ae5fce\" />\n\t\t\t\t\t\t<g className=\"landing2\">\n\t\t\t\t\t\t\t<circle cx=\"158\" cy=\"72\" r=\"72\" fill=\"#5b78c7\" />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</svg>\n\t\t\t\t</Circle>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nconst Circle = styled.div`\nsvg {\n    position: fixed;\n    top: 64%;\n    left: 50%;\n\t\ttransform: translate(-50%,-60%);\n\t}\n`","import React from 'react'\n\nexport const NavbarLogo = () => {\n\treturn(\n\t\t<>\n\t\t\t<svg width=\"345\" height=\"64\" viewBox=\"0 0 345 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<g filter=\"url(#filter0_d)\">\n\t\t\t\t<path d=\"M10.7971 18.712C11.4691 20.344 11.9251 22 12.1651 23.68C13.4611 22.432 15.0451 21.232 16.9171 20.08C18.7891 18.928 20.6851 18.352 22.6051 18.352C24.9091 18.352 26.8771 18.832 28.5091 19.792C30.1411 20.704 31.4611 22.216 32.4691 24.328C33.9091 22.888 35.6131 21.544 37.5811 20.296C39.5491 19 41.5651 18.352 43.6291 18.352C47.6131 18.352 50.4211 19.552 52.0531 21.952C53.7331 24.352 54.5731 27.4 54.5731 31.096V55H48.5971V33.04C48.5971 31.6 48.4771 30.16 48.2371 28.72C48.0451 27.28 47.5171 26.08 46.6531 25.12C45.8371 24.16 44.4931 23.68 42.6211 23.68C40.9411 23.68 39.2851 24.232 37.6531 25.336C36.0211 26.392 34.6531 27.472 33.5491 28.576V55H27.5731V33.04C27.5731 31.552 27.4531 30.112 27.2131 28.72C27.0211 27.28 26.4931 26.08 25.6291 25.12C24.8131 24.16 23.4691 23.68 21.5971 23.68C20.5411 23.68 19.4611 23.944 18.3571 24.472C17.2531 24.952 16.1971 25.576 15.1891 26.344C14.1811 27.064 13.2931 27.76 12.5251 28.432V55H6.54906V29.008C6.54906 27.52 6.35706 25.888 5.97306 24.112C5.63706 22.288 5.06106 20.728 4.24506 19.432L10.7971 18.712ZM78.7004 18.352C82.4924 18.352 85.3484 19.384 87.2684 21.448C89.1884 23.512 90.1484 26.416 90.1484 30.16V48.088C90.1484 49.096 90.3404 49.792 90.7244 50.176C91.1084 50.512 91.5644 50.68 92.0924 50.68C92.5244 50.68 92.9804 50.632 93.4604 50.536C93.9404 50.392 94.3964 50.224 94.8284 50.032L96.1244 53.92C95.3564 54.352 94.3724 54.736 93.1724 55.072C92.0204 55.456 90.8204 55.648 89.5724 55.648C88.3244 55.648 87.1964 55.312 86.1884 54.64C85.1804 53.92 84.5564 52.624 84.3164 50.752C82.9244 52.24 81.2924 53.464 79.4204 54.424C77.5484 55.336 75.5804 55.792 73.5164 55.792C70.6844 55.792 68.3324 54.952 66.4604 53.272C64.5884 51.592 63.6524 49.288 63.6524 46.36C63.6524 43.624 64.3004 41.44 65.5964 39.808C66.9404 38.176 68.6684 36.952 70.7804 36.136C72.8924 35.32 75.1244 34.768 77.4764 34.48C79.8764 34.192 82.1084 34.048 84.1724 34.048V30.232C84.1724 28.216 83.7644 26.512 82.9484 25.12C82.1324 23.728 80.5484 23.032 78.1964 23.032C76.3724 23.032 74.6204 23.392 72.9404 24.112C71.2604 24.832 69.5804 25.888 67.9004 27.28L64.9484 23.032C66.9164 21.448 69.0764 20.272 71.4284 19.504C73.7804 18.736 76.2044 18.352 78.7004 18.352ZM84.1724 38.728C82.8764 38.728 81.4124 38.8 79.7804 38.944C78.1484 39.04 76.5644 39.328 75.0284 39.808C73.4924 40.24 72.2204 40.96 71.2124 41.968C70.2524 42.976 69.7724 44.368 69.7724 46.144C69.7724 47.728 70.3004 48.904 71.3564 49.672C72.4604 50.392 73.8284 50.752 75.4604 50.752C77.1884 50.752 78.7004 50.272 79.9964 49.312C81.2924 48.352 82.3004 47.128 83.0204 45.64C83.7884 44.152 84.1724 42.616 84.1724 41.032V38.728ZM107.871 0.135998V33.976L121.263 19.216H127.671L113.919 34.264L129.615 55H122.487L107.871 35.56V55H101.895V4.384L100.959 0.135998H107.871ZM147.073 18.352C151.393 18.352 154.657 19.648 156.865 22.24C159.121 24.784 160.249 28.144 160.249 32.32C160.249 32.992 160.201 33.688 160.105 34.408C160.057 35.08 159.985 35.8 159.889 36.568H137.137C137.137 41.128 138.145 44.656 140.161 47.152C142.177 49.648 144.865 50.896 148.225 50.896C150.961 50.896 153.985 50.032 157.297 48.304L159.529 51.904C157.849 53.248 155.953 54.256 153.841 54.928C151.729 55.6 149.593 55.936 147.433 55.936C143.689 55.936 140.569 55.048 138.073 53.272C135.625 51.496 133.801 49.192 132.601 46.36C131.401 43.528 130.801 40.576 130.801 37.504C130.801 35.104 131.137 32.776 131.809 30.52C132.481 28.264 133.489 26.224 134.833 24.4C136.225 22.528 137.929 21.064 139.945 20.008C141.961 18.904 144.337 18.352 147.073 18.352ZM146.497 22.888C144.865 22.888 143.425 23.344 142.177 24.256C140.929 25.168 139.921 26.344 139.153 27.784C138.385 29.176 137.857 30.616 137.569 32.104H153.985C154.081 29.128 153.457 26.848 152.113 25.264C150.769 23.68 148.897 22.888 146.497 22.888ZM211.883 55.144C210.155 55.432 208.499 55.576 206.915 55.576C201.491 55.576 196.787 54.472 192.803 52.264C189.251 54.52 185.123 55.648 180.419 55.648C177.059 55.648 174.251 55 171.995 53.704C169.739 52.36 168.035 50.632 166.883 48.52C165.779 46.36 165.227 44.08 165.227 41.68C165.227 38.8 165.971 36.088 167.459 33.544C168.995 30.952 171.347 28.744 174.515 26.92C173.651 23.704 173.219 20.536 173.219 17.416C173.219 14.536 173.651 11.92 174.515 9.568C175.379 7.216 176.699 5.344 178.475 3.952C180.251 2.56 182.507 1.864 185.243 1.864C188.219 1.864 190.547 2.728 192.227 4.456C193.907 6.136 194.747 8.416 194.747 11.296C194.747 13.264 194.291 15.304 193.379 17.416C192.515 19.48 191.147 21.496 189.275 23.464C187.403 25.384 184.979 27.088 182.003 28.576C183.251 31.984 184.883 35.152 186.899 38.08C188.963 40.96 191.219 43.384 193.667 45.352C195.251 43.624 196.619 41.536 197.771 39.088C198.923 36.592 199.787 33.712 200.363 30.448L206.051 31.456C204.083 38.512 201.323 44.032 197.771 48.016C200.795 49.6 203.939 50.392 207.203 50.392C207.875 50.392 208.523 50.368 209.147 50.32C209.819 50.224 210.467 50.128 211.091 50.032L211.883 55.144ZM179.843 16.336C179.843 18.928 180.131 21.52 180.707 24.112C183.443 22.624 185.387 20.704 186.539 18.352C187.739 15.952 188.339 13.744 188.339 11.728C188.339 10.048 188.051 8.752 187.475 7.84C186.947 6.928 186.059 6.472 184.811 6.472C181.499 6.472 179.843 9.76 179.843 16.336ZM171.995 40.6C171.995 42.328 172.355 44.008 173.075 45.64C173.795 47.224 174.851 48.52 176.243 49.528C177.683 50.536 179.483 51.04 181.643 51.04C184.043 51.04 186.347 50.464 188.555 49.312C185.963 47.104 183.563 44.488 181.355 41.464C179.195 38.392 177.443 35.104 176.099 31.6C173.363 33.76 171.995 36.76 171.995 40.6ZM228.381 18.352C230.013 18.352 231.621 18.568 233.205 19C234.837 19.384 236.325 20.008 237.669 20.872L235.581 25.48C234.525 24.616 233.349 23.968 232.053 23.536C230.757 23.104 229.485 22.888 228.237 22.888C226.461 22.888 224.901 23.296 223.557 24.112C222.261 24.928 221.613 26.152 221.613 27.784C221.613 29.56 222.189 30.88 223.341 31.744C224.541 32.608 225.957 33.424 227.589 34.192C229.173 34.912 230.757 35.728 232.341 36.64C233.973 37.504 235.341 38.632 236.445 40.024C237.549 41.368 238.101 43.192 238.101 45.496C238.101 47.896 237.501 49.888 236.301 51.472C235.149 53.008 233.613 54.136 231.693 54.856C229.821 55.576 227.781 55.936 225.573 55.936C223.653 55.936 221.733 55.672 219.812 55.144C217.893 54.616 216.117 53.872 214.485 52.912L217.005 48.52C218.157 49.384 219.453 50.08 220.893 50.608C222.333 51.136 223.725 51.4 225.069 51.4C226.893 51.4 228.477 50.968 229.82 50.104C231.213 49.24 231.909 47.944 231.909 46.216C231.909 45.016 231.525 44.032 230.757 43.264C230.037 42.448 229.101 41.728 227.949 41.104C226.797 40.48 225.597 39.88 224.349 39.304C222.909 38.584 221.493 37.816 220.101 37C218.757 36.136 217.653 35.056 216.789 33.76C215.925 32.464 215.493 30.808 215.493 28.792C215.493 26.488 216.093 24.568 217.293 23.032C218.541 21.496 220.149 20.344 222.117 19.576C224.085 18.76 226.173 18.352 228.381 18.352ZM259.966 18.352C263.758 18.352 266.614 19.384 268.534 21.448C270.454 23.512 271.414 26.416 271.414 30.16V48.088C271.414 49.096 271.606 49.792 271.99 50.176C272.374 50.512 272.83 50.68 273.358 50.68C273.79 50.68 274.246 50.632 274.726 50.536C275.206 50.392 275.662 50.224 276.094 50.032L277.39 53.92C276.622 54.352 275.638 54.736 274.438 55.072C273.286 55.456 272.086 55.648 270.838 55.648C269.59 55.648 268.462 55.312 267.454 54.64C266.446 53.92 265.822 52.624 265.582 50.752C264.19 52.24 262.558 53.464 260.686 54.424C258.814 55.336 256.846 55.792 254.782 55.792C251.95 55.792 249.598 54.952 247.726 53.272C245.854 51.592 244.918 49.288 244.918 46.36C244.918 43.624 245.566 41.44 246.862 39.808C248.206 38.176 249.934 36.952 252.046 36.136C254.158 35.32 256.39 34.768 258.742 34.48C261.142 34.192 263.374 34.048 265.438 34.048V30.232C265.438 28.216 265.03 26.512 264.214 25.12C263.398 23.728 261.814 23.032 259.462 23.032C257.638 23.032 255.886 23.392 254.206 24.112C252.526 24.832 250.846 25.888 249.166 27.28L246.214 23.032C248.182 21.448 250.342 20.272 252.694 19.504C255.046 18.736 257.47 18.352 259.966 18.352ZM265.438 38.728C264.142 38.728 262.678 38.8 261.046 38.944C259.414 39.04 257.83 39.328 256.294 39.808C254.758 40.24 253.486 40.96 252.478 41.968C251.518 42.976 251.038 44.368 251.038 46.144C251.038 47.728 251.566 48.904 252.622 49.672C253.726 50.392 255.094 50.752 256.726 50.752C258.454 50.752 259.966 50.272 261.262 49.312C262.558 48.352 263.566 47.128 264.286 45.64C265.054 44.152 265.438 42.616 265.438 41.032V38.728ZM283.122 19.216L290.898 41.392C291.234 42.304 291.546 43.192 291.834 44.056C292.122 44.92 292.41 45.952 292.698 47.152C292.986 46 293.25 45.016 293.49 44.2C293.778 43.336 294.066 42.496 294.354 41.68L302.202 19.216H307.818L295.002 55.432H289.53L276.786 19.216H283.122ZM327.073 18.352C331.393 18.352 334.657 19.648 336.865 22.24C339.121 24.784 340.249 28.144 340.249 32.32C340.249 32.992 340.201 33.688 340.105 34.408C340.057 35.08 339.985 35.8 339.889 36.568H317.137C317.137 41.128 318.145 44.656 320.161 47.152C322.177 49.648 324.865 50.896 328.225 50.896C330.961 50.896 333.985 50.032 337.297 48.304L339.529 51.904C337.849 53.248 335.953 54.256 333.841 54.928C331.729 55.6 329.593 55.936 327.433 55.936C323.689 55.936 320.569 55.048 318.073 53.272C315.625 51.496 313.801 49.192 312.601 46.36C311.401 43.528 310.801 40.576 310.801 37.504C310.801 35.104 311.137 32.776 311.809 30.52C312.481 28.264 313.489 26.224 314.833 24.4C316.225 22.528 317.929 21.064 319.945 20.008C321.961 18.904 324.337 18.352 327.073 18.352ZM326.497 22.888C324.865 22.888 323.425 23.344 322.177 24.256C320.929 25.168 319.921 26.344 319.153 27.784C318.385 29.176 317.857 30.616 317.569 32.104H333.985C334.081 29.128 333.457 26.848 332.113 25.264C330.769 23.68 328.897 22.888 326.497 22.888Z\" fill=\"white\"/>\n\t\t\t\t<path d=\"M10.7971 18.712C11.4691 20.344 11.9251 22 12.1651 23.68C13.4611 22.432 15.0451 21.232 16.9171 20.08C18.7891 18.928 20.6851 18.352 22.6051 18.352C24.9091 18.352 26.8771 18.832 28.5091 19.792C30.1411 20.704 31.4611 22.216 32.4691 24.328C33.9091 22.888 35.6131 21.544 37.5811 20.296C39.5491 19 41.5651 18.352 43.6291 18.352C47.6131 18.352 50.4211 19.552 52.0531 21.952C53.7331 24.352 54.5731 27.4 54.5731 31.096V55H48.5971V33.04C48.5971 31.6 48.4771 30.16 48.2371 28.72C48.0451 27.28 47.5171 26.08 46.6531 25.12C45.8371 24.16 44.4931 23.68 42.6211 23.68C40.9411 23.68 39.2851 24.232 37.6531 25.336C36.0211 26.392 34.6531 27.472 33.5491 28.576V55H27.5731V33.04C27.5731 31.552 27.4531 30.112 27.2131 28.72C27.0211 27.28 26.4931 26.08 25.6291 25.12C24.8131 24.16 23.4691 23.68 21.5971 23.68C20.5411 23.68 19.4611 23.944 18.3571 24.472C17.2531 24.952 16.1971 25.576 15.1891 26.344C14.1811 27.064 13.2931 27.76 12.5251 28.432V55H6.54906V29.008C6.54906 27.52 6.35706 25.888 5.97306 24.112C5.63706 22.288 5.06106 20.728 4.24506 19.432L10.7971 18.712ZM78.7004 18.352C82.4924 18.352 85.3484 19.384 87.2684 21.448C89.1884 23.512 90.1484 26.416 90.1484 30.16V48.088C90.1484 49.096 90.3404 49.792 90.7244 50.176C91.1084 50.512 91.5644 50.68 92.0924 50.68C92.5244 50.68 92.9804 50.632 93.4604 50.536C93.9404 50.392 94.3964 50.224 94.8284 50.032L96.1244 53.92C95.3564 54.352 94.3724 54.736 93.1724 55.072C92.0204 55.456 90.8204 55.648 89.5724 55.648C88.3244 55.648 87.1964 55.312 86.1884 54.64C85.1804 53.92 84.5564 52.624 84.3164 50.752C82.9244 52.24 81.2924 53.464 79.4204 54.424C77.5484 55.336 75.5804 55.792 73.5164 55.792C70.6844 55.792 68.3324 54.952 66.4604 53.272C64.5884 51.592 63.6524 49.288 63.6524 46.36C63.6524 43.624 64.3004 41.44 65.5964 39.808C66.9404 38.176 68.6684 36.952 70.7804 36.136C72.8924 35.32 75.1244 34.768 77.4764 34.48C79.8764 34.192 82.1084 34.048 84.1724 34.048V30.232C84.1724 28.216 83.7644 26.512 82.9484 25.12C82.1324 23.728 80.5484 23.032 78.1964 23.032C76.3724 23.032 74.6204 23.392 72.9404 24.112C71.2604 24.832 69.5804 25.888 67.9004 27.28L64.9484 23.032C66.9164 21.448 69.0764 20.272 71.4284 19.504C73.7804 18.736 76.2044 18.352 78.7004 18.352ZM84.1724 38.728C82.8764 38.728 81.4124 38.8 79.7804 38.944C78.1484 39.04 76.5644 39.328 75.0284 39.808C73.4924 40.24 72.2204 40.96 71.2124 41.968C70.2524 42.976 69.7724 44.368 69.7724 46.144C69.7724 47.728 70.3004 48.904 71.3564 49.672C72.4604 50.392 73.8284 50.752 75.4604 50.752C77.1884 50.752 78.7004 50.272 79.9964 49.312C81.2924 48.352 82.3004 47.128 83.0204 45.64C83.7884 44.152 84.1724 42.616 84.1724 41.032V38.728ZM107.871 0.135998V33.976L121.263 19.216H127.671L113.919 34.264L129.615 55H122.487L107.871 35.56V55H101.895V4.384L100.959 0.135998H107.871ZM147.073 18.352C151.393 18.352 154.657 19.648 156.865 22.24C159.121 24.784 160.249 28.144 160.249 32.32C160.249 32.992 160.201 33.688 160.105 34.408C160.057 35.08 159.985 35.8 159.889 36.568H137.137C137.137 41.128 138.145 44.656 140.161 47.152C142.177 49.648 144.865 50.896 148.225 50.896C150.961 50.896 153.985 50.032 157.297 48.304L159.529 51.904C157.849 53.248 155.953 54.256 153.841 54.928C151.729 55.6 149.593 55.936 147.433 55.936C143.689 55.936 140.569 55.048 138.073 53.272C135.625 51.496 133.801 49.192 132.601 46.36C131.401 43.528 130.801 40.576 130.801 37.504C130.801 35.104 131.137 32.776 131.809 30.52C132.481 28.264 133.489 26.224 134.833 24.4C136.225 22.528 137.929 21.064 139.945 20.008C141.961 18.904 144.337 18.352 147.073 18.352ZM146.497 22.888C144.865 22.888 143.425 23.344 142.177 24.256C140.929 25.168 139.921 26.344 139.153 27.784C138.385 29.176 137.857 30.616 137.569 32.104H153.985C154.081 29.128 153.457 26.848 152.113 25.264C150.769 23.68 148.897 22.888 146.497 22.888ZM211.883 55.144C210.155 55.432 208.499 55.576 206.915 55.576C201.491 55.576 196.787 54.472 192.803 52.264C189.251 54.52 185.123 55.648 180.419 55.648C177.059 55.648 174.251 55 171.995 53.704C169.739 52.36 168.035 50.632 166.883 48.52C165.779 46.36 165.227 44.08 165.227 41.68C165.227 38.8 165.971 36.088 167.459 33.544C168.995 30.952 171.347 28.744 174.515 26.92C173.651 23.704 173.219 20.536 173.219 17.416C173.219 14.536 173.651 11.92 174.515 9.568C175.379 7.216 176.699 5.344 178.475 3.952C180.251 2.56 182.507 1.864 185.243 1.864C188.219 1.864 190.547 2.728 192.227 4.456C193.907 6.136 194.747 8.416 194.747 11.296C194.747 13.264 194.291 15.304 193.379 17.416C192.515 19.48 191.147 21.496 189.275 23.464C187.403 25.384 184.979 27.088 182.003 28.576C183.251 31.984 184.883 35.152 186.899 38.08C188.963 40.96 191.219 43.384 193.667 45.352C195.251 43.624 196.619 41.536 197.771 39.088C198.923 36.592 199.787 33.712 200.363 30.448L206.051 31.456C204.083 38.512 201.323 44.032 197.771 48.016C200.795 49.6 203.939 50.392 207.203 50.392C207.875 50.392 208.523 50.368 209.147 50.32C209.819 50.224 210.467 50.128 211.091 50.032L211.883 55.144ZM179.843 16.336C179.843 18.928 180.131 21.52 180.707 24.112C183.443 22.624 185.387 20.704 186.539 18.352C187.739 15.952 188.339 13.744 188.339 11.728C188.339 10.048 188.051 8.752 187.475 7.84C186.947 6.928 186.059 6.472 184.811 6.472C181.499 6.472 179.843 9.76 179.843 16.336ZM171.995 40.6C171.995 42.328 172.355 44.008 173.075 45.64C173.795 47.224 174.851 48.52 176.243 49.528C177.683 50.536 179.483 51.04 181.643 51.04C184.043 51.04 186.347 50.464 188.555 49.312C185.963 47.104 183.563 44.488 181.355 41.464C179.195 38.392 177.443 35.104 176.099 31.6C173.363 33.76 171.995 36.76 171.995 40.6ZM228.381 18.352C230.013 18.352 231.621 18.568 233.205 19C234.837 19.384 236.325 20.008 237.669 20.872L235.581 25.48C234.525 24.616 233.349 23.968 232.053 23.536C230.757 23.104 229.485 22.888 228.237 22.888C226.461 22.888 224.901 23.296 223.557 24.112C222.261 24.928 221.613 26.152 221.613 27.784C221.613 29.56 222.189 30.88 223.341 31.744C224.541 32.608 225.957 33.424 227.589 34.192C229.173 34.912 230.757 35.728 232.341 36.64C233.973 37.504 235.341 38.632 236.445 40.024C237.549 41.368 238.101 43.192 238.101 45.496C238.101 47.896 237.501 49.888 236.301 51.472C235.149 53.008 233.613 54.136 231.693 54.856C229.821 55.576 227.781 55.936 225.573 55.936C223.653 55.936 221.733 55.672 219.812 55.144C217.893 54.616 216.117 53.872 214.485 52.912L217.005 48.52C218.157 49.384 219.453 50.08 220.893 50.608C222.333 51.136 223.725 51.4 225.069 51.4C226.893 51.4 228.477 50.968 229.82 50.104C231.213 49.24 231.909 47.944 231.909 46.216C231.909 45.016 231.525 44.032 230.757 43.264C230.037 42.448 229.101 41.728 227.949 41.104C226.797 40.48 225.597 39.88 224.349 39.304C222.909 38.584 221.493 37.816 220.101 37C218.757 36.136 217.653 35.056 216.789 33.76C215.925 32.464 215.493 30.808 215.493 28.792C215.493 26.488 216.093 24.568 217.293 23.032C218.541 21.496 220.149 20.344 222.117 19.576C224.085 18.76 226.173 18.352 228.381 18.352ZM259.966 18.352C263.758 18.352 266.614 19.384 268.534 21.448C270.454 23.512 271.414 26.416 271.414 30.16V48.088C271.414 49.096 271.606 49.792 271.99 50.176C272.374 50.512 272.83 50.68 273.358 50.68C273.79 50.68 274.246 50.632 274.726 50.536C275.206 50.392 275.662 50.224 276.094 50.032L277.39 53.92C276.622 54.352 275.638 54.736 274.438 55.072C273.286 55.456 272.086 55.648 270.838 55.648C269.59 55.648 268.462 55.312 267.454 54.64C266.446 53.92 265.822 52.624 265.582 50.752C264.19 52.24 262.558 53.464 260.686 54.424C258.814 55.336 256.846 55.792 254.782 55.792C251.95 55.792 249.598 54.952 247.726 53.272C245.854 51.592 244.918 49.288 244.918 46.36C244.918 43.624 245.566 41.44 246.862 39.808C248.206 38.176 249.934 36.952 252.046 36.136C254.158 35.32 256.39 34.768 258.742 34.48C261.142 34.192 263.374 34.048 265.438 34.048V30.232C265.438 28.216 265.03 26.512 264.214 25.12C263.398 23.728 261.814 23.032 259.462 23.032C257.638 23.032 255.886 23.392 254.206 24.112C252.526 24.832 250.846 25.888 249.166 27.28L246.214 23.032C248.182 21.448 250.342 20.272 252.694 19.504C255.046 18.736 257.47 18.352 259.966 18.352ZM265.438 38.728C264.142 38.728 262.678 38.8 261.046 38.944C259.414 39.04 257.83 39.328 256.294 39.808C254.758 40.24 253.486 40.96 252.478 41.968C251.518 42.976 251.038 44.368 251.038 46.144C251.038 47.728 251.566 48.904 252.622 49.672C253.726 50.392 255.094 50.752 256.726 50.752C258.454 50.752 259.966 50.272 261.262 49.312C262.558 48.352 263.566 47.128 264.286 45.64C265.054 44.152 265.438 42.616 265.438 41.032V38.728ZM283.122 19.216L290.898 41.392C291.234 42.304 291.546 43.192 291.834 44.056C292.122 44.92 292.41 45.952 292.698 47.152C292.986 46 293.25 45.016 293.49 44.2C293.778 43.336 294.066 42.496 294.354 41.68L302.202 19.216H307.818L295.002 55.432H289.53L276.786 19.216H283.122ZM327.073 18.352C331.393 18.352 334.657 19.648 336.865 22.24C339.121 24.784 340.249 28.144 340.249 32.32C340.249 32.992 340.201 33.688 340.105 34.408C340.057 35.08 339.985 35.8 339.889 36.568H317.137C317.137 41.128 318.145 44.656 320.161 47.152C322.177 49.648 324.865 50.896 328.225 50.896C330.961 50.896 333.985 50.032 337.297 48.304L339.529 51.904C337.849 53.248 335.953 54.256 333.841 54.928C331.729 55.6 329.593 55.936 327.433 55.936C323.689 55.936 320.569 55.048 318.073 53.272C315.625 51.496 313.801 49.192 312.601 46.36C311.401 43.528 310.801 40.576 310.801 37.504C310.801 35.104 311.137 32.776 311.809 30.52C312.481 28.264 313.489 26.224 314.833 24.4C316.225 22.528 317.929 21.064 319.945 20.008C321.961 18.904 324.337 18.352 327.073 18.352ZM326.497 22.888C324.865 22.888 323.425 23.344 322.177 24.256C320.929 25.168 319.921 26.344 319.153 27.784C318.385 29.176 317.857 30.616 317.569 32.104H333.985C334.081 29.128 333.457 26.848 332.113 25.264C330.769 23.68 328.897 22.888 326.497 22.888Z\" fill=\"url(#paint0_linear)\"/>\n\t\t\t\t</g>\n\t\t\t\t<defs>\n\t\t\t\t\t<filter id=\"filter0_d\" x=\"0.245056\" y=\"0.135998\" width=\"344.004\" height=\"63.8\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"/>\n\t\t\t\t\t<feOffset dy=\"4\"/>\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\"/>\n\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\n\t\t\t\t\t</filter>\n\t\t\t\t<linearGradient id=\"paint0_linear\" x1=\"172\" y1=\"-15.0552\" x2=\"174.284\" y2=\"71.94\" gradientUnits=\"userSpaceOnUse\">\n\t\t\t\t<stop offset=\"0.34375\" stopColor=\"white\" stopOpacity=\"0\"/>\n\t\t\t\t<stop offset=\"0.692708\" stopColor=\"#75BE5C\"/>\n\t\t\t\t</linearGradient>\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t</>\n\t)\n}","import React, {useState} from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { NavbarLogo } from './layouts/NavbarLogo'\n\nexport const Navbar = () => {\n\t\n\tconst [isHamburger, setIsHamburger] = useState(false)\n\tconst authenticated = useSelector(state => state.user.authenticated)\n\n\treturn (\n    <nav>\n      {authenticated ? (\n        <>\n          <div\n            className=\"hamburger\"\n            onClick={() => setIsHamburger(!isHamburger)}\n          >\n            <div className=\"line\"></div>\n            <div className=\"line\"></div>\n            <div className=\"line\"></div>\n          </div>\n          <ul className={isHamburger ? \"nav-links open\" : \"nav-links\"}>\n            <li className={isHamburger ? \"fade\" : \"\"}>\n              <NavLink exact to=\"/\" activeClassName=\"selected\">Home</NavLink>\n            </li>\n            <li className={isHamburger ? \"fade\" : \"\"}>\n              <NavLink to=\"/table\" activeClassName=\"selected\">Table</NavLink>\n            </li>\n            <li className={isHamburger ? \"fade\" : \"\"}>\n              <NavLink to=\"/diagrams\" activeClassName=\"selected\">Diagrams</NavLink>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <>\n          <NavbarLogo />\n          <Link to=\"/authform\" className=\"sign-in\">\n            <i\n              className=\"fas fa-sign-in-alt fa-5x\"\n              style={{ color: \"white\" }}\n            ></i>\n          </Link>\n        </>\n      )}\n    </nav>\n  );\n}\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n\tfont-family: 'Architects Daughter', cursive;\n\tborder-radius: 20px;\n\tcursor: pointer;\n\tborder: 1px solid var(--background);\n\tbackground: var(--main-color);\n\tcolor: var(--background);\n\tfont-size: 12px;\n\tfont-weight: bold;\n\tpadding: 12px 45px;\n\tletter-spacing: 1px;\n\ttext-transform: uppercase;\n\ttransition: transform 80ms ease-in;\n\t&&:active {\n\t\ttransform: scale(0.95);\n\t}\n\t&&:focus {\n\t\toutline: none;\n\t}\n\t&&.ghost {\n\t\tbackground: transparent;\n\t\tbackground-color: var(--background);\n\t\tborder-color: #fff;\n\t\tcolor: var(--main-color);\n\t}\n`","import { LOADING_DATA, SET_ERRORS } from \"../types\";\nimport axios from \"axios\";\n\nexport const getData = () => dispatch => {\n\taxios\n    .get(\"/items\")\n    .then((res) => {\n      dispatch({\n        type: LOADING_DATA,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n}\n","// User reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\nexport const SET_USER = 'SET_USER'\nexport const LOADING_USER = 'LOADING_USER'\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS'\nexport const LOADING_UI = 'LOADING_UI'\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\n// DATA reducer types\nexport const LOADING_DATA = 'LOADING_DATA'\nexport const SET_ITEM = 'SET_ITEM'","import {\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  STOP_LOADING_UI,\n} from \"../types\";\nimport axios from 'axios'\nimport { getData } from './dataActions'\n\nexport const loginUser = (userData, history) => dispatch => {\n\tdispatch({ type: LOADING_UI })\n\taxios.post('/login', userData)\n\t\t.then(res => {\n\t\t\tsetAuthorizationHeader(res.data)\n\t\t\tdispatch(getUser())\n\t\t\tdispatch(getData())\n\t\t\tdispatch({ type: CLEAR_ERRORS })\n\t\t\thistory.push('/')\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t})\n\t\t})\n}\n\nexport const getUser = () => dispatch => {\n\taxios.defaults.headers.common['Authorization'] = localStorage.getItem('DBAuthToken') || undefined\n\tdispatch({ type: LOADING_UI })\n\t\taxios.get('/user')\n\t\t\t.then(res => {\n\t\t\t\tdispatch({\n          payload: res.data,\n          type: SET_AUTHENTICATED,\n        });\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n}\n\nexport const signUpUser = (userData, history) => dispatch => {\n\tdispatch({ type: LOADING_UI })\n\taxios.post('/signup', userData)\n\t\t.then(res => {\n\t\t\tsetAuthorizationHeader(res.data)\n\t\t\tdispatch(getUser())\n\t\t\tdispatch(getData())\n\t\t\tdispatch({ type: \"CLEAR_ERRORS\" })\n\t\t})\n\t\t.then(() => history.push('/'))\n\t\t.catch(err => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t})\n\t\t})\n}\n\nexport const setAuthorizationHeader = ({ token }) => {\n\tconst DBAuthToken = `Bearer ${token}`\n\tlocalStorage.setItem('DBAuthToken', DBAuthToken)\n\taxios.defaults.headers.common['Authorization'] = DBAuthToken\n}\n\nexport const logOutUser = () => dispatch => {\n\tlocalStorage.removeItem('DBAuthToken')\n\tdelete axios.defaults.headers.common['Authorization']\n\tdispatch({ type: SET_UNAUTHENTICATED })\n\tdispatch({ type: STOP_LOADING_UI });\n}\n\nexport const uploadImage = formData => dispatch => {\n\taxios.post('/user/uploadImage', formData)\n\t\t.then(() => dispatch(getUser()))\n\t\t.catch(err => console.log(err))\n}","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\nimport { Button } from '../components/layouts/Button'\nimport { Link, useHistory } from 'react-router-dom'\nimport { loginUser, signUpUser, setAuthorizationHeader } from '../redux/actions/userActions'\nimport jwtDecode from 'jwt-decode'\n\nfirebase.initializeApp({\n\t\t\tapiKey: \"AIzaSyD5adg6COdhMVMHu3mUUq8zhhUYe3eHG2w\",\n\t\t\tauthDomain: \"make-and-save-c1e7a.firebaseapp.com\"\n\t\t})\n\nexport const AuthForm = () => {\n\tconst [toggleSlides, setToggleSlides] = useState(false)\n\tconst history = useHistory()\n\tconst ui = useSelector(state => state.ui)\n\tconst dispatch = useDispatch()\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [errors, setErrors] = useState('') \n\tconst [seeText, setSeeText] = useState(false)\n\tconst [seeConfirmText, setSeeConfirmText] = useState(false)\n\tconst [signIn, setSignIn] = useState(false)\n\tconst uiConfig = {\n\t\tsignInFloe: \"popup\",\n\t\tsignInOptions: [\n\t\t\tfirebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.FacebookAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.TwitterAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.GithubAuthProvider.PROVIDER_ID\n\t\t],\n\t\tcallbacks: {\n\t\t\tsignInSuccess: () => false\n\t\t}\n\t}\n\tuseEffect(() => {ui.error !== null ? setErrors(ui.error) ? setErrors(signIn.code) : setErrors('') : setErrors('')}, [ui.error,signIn])\n\tuseEffect(()=> {\n\t\tconst unsubscribe = firebase.auth().onAuthStateChanged(user => setSignIn(user))\n\t\treturn unsubscribe\n\t\t},[])\n\treturn (\n\t\t\t<div className=\"containerForm\">\n\t\t\t\t<StyledFirebaseAuth\n\t\t\t\t\tuiConfig={uiConfig}\n\t\t\t\t\tfirebaseAuth={firebase.auth()}\n\t\t\t\t/>\n\t\t\t\t<div className={toggleSlides ? \"container right-panel-active\" : \"container\"}>\n\t\t\t\t\t<div className=\"form-container sign-up-container\">\n\t\t\t\t\t\t<form onSubmit={\n\t\t\t\t\t\t\t(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tdispatch(signUpUser({name, email, password, confirmPassword}, history))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<h1>Create Account</h1> \n\t\t\t\t\t\t\t<div className=\"social-container\">\n\t\t\t\t\t\t\t\t<Link to=\"#\" onClick={()=>{\n\t\t\t\t\t\t\t\t\tvar provider = new firebase.auth.FacebookAuthProvider();\n\t\t\t\t\t\t\t\t\tprovider.addScope('user_birthday');\n\t\t\t\t\t\t\t\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t\t\t\t\t\t\t\t.then(function(result) {\n\t\t\t\t\t\t\t\t\t\t// This gives you a Facebook Access Token.\n\t\t\t\t\t\t\t\t\t\tconsole.log('OUTPUT: AuthForm -> token', result.credential.accessToken)\n\t\t\t\t\t\t\t\t\t\tvar token = jwtDecode(result.credential.accessToken)\n\t\t\t\t\t\t\t\t\t\tsetAuthorizationHeader({ token })\n\t\t\t\t\t\t\t\t\t\t// The signed-in user info.\n\t\t\t\t\t\t\t\t\t\tvar user = result.user;\n\t\t\t\t\t\t\t\t\t\tconsole.log('OUTPUT: AuthForm -> user', user)\n\t\t\t\t\t\t\t\t\t\t}).catch(function(error) {\n                      console.log('OUTPUT: AuthForm -> error', error)\n\t\t\t\t\t\t\t\t\t\t\t// Handle Errors here.\n\t\t\t\t\t\t\t\t\t\t\tvar errorCode = error.code;\n\t\t\t\t\t\t\t\t\t\t\tvar errorMessage = error.message;\n\t\t\t\t\t\t\t\t\t\t\t// The email of the user's account used.\n\t\t\t\t\t\t\t\t\t\t\tvar email = error.email;\n\t\t\t\t\t\t\t\t\t\t\t// The firebase.auth.AuthCredential type that was used.\n\t\t\t\t\t\t\t\t\t\t\tvar credential = error.credential;\n\t\t\t\t\t\t\t\t\t\t\t// ...\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}><i className=\"fab fa-facebook-f\"></i></Link>\n\t\t\t\t\t\t\t\t<Link to=\"#\"><i className=\"fab fa-google\"></i></Link>\n\t\t\t\t\t\t\t\t<Link to=\"#\"><i className=\"fab fa-twitter\"></i></Link>\n\t\t\t\t\t\t\t\t<Link to=\"#\"><i className=\"fab fa-github\"></i></Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{errors.general && (<span style={{ color: 'red', fontSize: '1.5rem' }}>{errors.account}</span>)}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tvalue={name} \n\t\t\t\t\t\t\t\tonChange={event => setName(event.target.value)}\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" />\n\t\t\t\t\t\t\t{errors.name && (<span style={{color: 'red'}}>{errors.name}</span>)}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\tvalue={email} \n\t\t\t\t\t\t\t\tonChange={event=>setEmail(event.target.value)} \n\t\t\t\t\t\t\t\tplaceholder=\"Email\" />\n\t\t\t\t\t\t\t{errors.email && (<span style={{color: 'red'}}>{errors.email}</span>)}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype={seeText?\"text\":\"password\"}\n\t\t\t\t\t\t\t\tvalue={password} \n\t\t\t\t\t\t\t\tonChange={event=>setPassword(event.target.value)} \n\t\t\t\t\t\t\t\tplaceholder=\"Password\" />\n\t\t\t\t\t\t\t{seeText?<i className=\"far fa-eye fa-lg\" onClick={()=>setSeeText(true)}></i>:<i className=\"far fa-eye-slash fa-lg\" onClick={()=>setSeeText(false)}></i>}\n\t\t\t\t\t\t\t{errors.password && (<span style={{ color: 'red' }}>{errors.password}</span>)}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype={seeConfirmText?\"text\":\"password\"} \n\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\tstyle={{marginBottom: '1.5rem'}} \n\t\t\t\t\t\t\t\tonChange={event=>setConfirmPassword(event.target.value)} \n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" />\n\t\t\t\t\t\t\t{seeText?<span className=\"far fa-eye fa-lg\" onClick={()=>setSeeConfirmText(false)}></span>:<span className=\"far fa-eye-slash fa-lg\" onClick={()=>setSeeConfirmText(true)}></span>}\n\t\t\t\t\t\t\t{errors.confirmPassword && (<span style={{ color: 'red' }}>{errors.confirmPassword}</span>)}\n\t\t\t\t\t\t\t{ui.loading ? <i className=\"fas fa-spinner fa-pulse fa-lg\" style={{ color: \"var(--main-color)\", marginTop: \"1em\" }}></i> : <Button type=\"submit\">Sign Up</Button>}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-container sign-in-container\">\n\t\t\t\t\t\t<form onSubmit={\n\t\t\t\t\t\t\t(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tdispatch(loginUser({ email, password }, history))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<h1>Sign in</h1>\n\t\t\t\t\t\t\t<div className=\"social-container\">\n\t\t\t\t\t\t\t\t<Link to=\"#\" onClick={()=>{\n\t\t\t\t\t\t\t\t\tvar provider = new firebase.auth.FacebookAuthProvider();\n\t\t\t\t\t\t\t\t\tprovider.addScope('user_birthday');\n\t\t\t\t\t\t\t\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t\t\t\t\t\t\t\t.then(function(result) {\n\t\t\t\t\t\t\t\t\t\t// This gives you a Facebook Access Token.\n\t\t\t\t\t\t\t\t\t\tconsole.log('OUTPUT: AuthForm -> token', result.credential.accessToken)\n\t\t\t\t\t\t\t\t\t\tvar token = jwtDecode(result.credential.accessToken)\n\t\t\t\t\t\t\t\t\t\tsetAuthorizationHeader({ token })\n\t\t\t\t\t\t\t\t\t\t// The signed-in user info.\n\t\t\t\t\t\t\t\t\t\tvar user = result.user;\n\t\t\t\t\t\t\t\t\t\tconsole.log('OUTPUT: AuthForm -> user', user)\n\t\t\t\t\t\t\t\t\t\t}).catch(function(error) {\n                      console.log('OUTPUT: AuthForm -> error', error)\n\t\t\t\t\t\t\t\t\t\t\t// Handle Errors here.\n\t\t\t\t\t\t\t\t\t\t\tvar errorCode = error.code;\n\t\t\t\t\t\t\t\t\t\t\tvar errorMessage = error.message;\n\t\t\t\t\t\t\t\t\t\t\t// The email of the user's account used.\n\t\t\t\t\t\t\t\t\t\t\tvar email = error.email;\n\t\t\t\t\t\t\t\t\t\t\t// The firebase.auth.AuthCredential type that was used.\n\t\t\t\t\t\t\t\t\t\t\tvar credential = error.credential;\n\t\t\t\t\t\t\t\t\t\t\t// ...\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}><i className=\"fab fa-facebook-f\"></i></Link>\n\t\t\t\t\t\t\t\t{/* <Link to=\"#\" onClick={()=>{\n\t\t\t\t\t\t\t\t\tuiConfig={uiConfig}\n\t\t\t\t\t\t\t\t\tfirebaseAuth={firebase.auth()}\n\t\t\t\t\t\t\t\t}}><i className=\"fab fa-google\"></i></Link>\n\t\t\t\t\t\t\t\t<Link to=\"#\" onClick={()=>{\n\t\t\t\t\t\t\t\t\tuiConfig={uiConfig}\n\t\t\t\t\t\t\t\t\tfirebaseAuth={firebase.auth()}\n\t\t\t\t\t\t\t\t}}><i className=\"fab fa-twitter\"></i></Link>\n\t\t\t\t\t\t\t\t<Link to=\"#\" onClick={()=>{\n\t\t\t\t\t\t\t\t\tuiConfig={uiConfig}\n\t\t\t\t\t\t\t\t\tfirebaseAuth={firebase.auth()}\n\t\t\t\t\t\t\t\t}}><i className=\"fab fa-github\"></i></Link> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{errors.general && (<span style={{ color: 'red', fontSize: '1.5rem' }}>{errors.general}</span>)}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\tvalue={email} \n\t\t\t\t\t\t\t\tonChange={event=>setEmail(event.target.value)} \n\t\t\t\t\t\t\t\tplaceholder=\"Email\" />\n\t\t\t\t\t\t\t{errors.email && (<span style={{ color: 'red' }}>{errors.email}</span>)}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype={seeText?\"text\":\"password\"} \n\t\t\t\t\t\t\t\tvalue={password} \n\t\t\t\t\t\t\t\tonChange={event=>setPassword(event.target.value)} \n\t\t\t\t\t\t\t\tplaceholder=\"Password\" />\n\t\t\t\t\t\t\t\t{seeText?<i className=\"far fa-eye fa-lg\" onClick={()=>setSeeText(false)}></i>:<i className=\"far fa-eye-slash fa-lg\" onClick={()=>setSeeText(true)}></i>}\n\t\t\t\t\t\t\t{errors.password && (<span style={{ color: 'red' }}>{errors.password}</span>)}\n\t\t\t\t\t\t\t<Link to=\"#\" onClick={() => {\n\t\t\t\t\t\t\t\tsetToggleSlides(!toggleSlides)\n\t\t\t\t\t\t\t\tsetPassword('')\n\t\t\t\t\t\t\t\tsetEmail('')\n\t\t\t\t\t\t\t\t}} className=\"password\">Forgot your password?</Link>\n\t\t\t\t\t\t{ui.loading ? <i className=\"fas fa-spinner fa-pulse fa-lg\" style={{ color: \"var(--main-color)\", marginTop: \"1em\" }}></i> : <Button type=\"submit\">Sign In</Button>}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overlay-container\">\n\t\t\t\t\t\t<div className=\"overlay\">\n\t\t\t\t\t\t\t<div className=\"overlay-panel overlay-left\">\n\t\t\t\t\t\t\t\t<h1>Welcome Back!</h1>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tTo keep connected with us please login with your personal info\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<Button className=\"ghost\" onClick={() => {\n\t\t\t\t\t\t\t\t\tsetToggleSlides(!toggleSlides)\n\t\t\t\t\t\t\t\t\tsetPassword('')\n\t\t\t\t\t\t\t\t\tsetConfirmPassword('')\n\t\t\t\t\t\t\t\t\tsetEmail('')\n\t\t\t\t\t\t\t\t\tsetName('')\n\t\t\t\t\t\t\t\t\tsetErrors('')\n\t\t\t\t\t\t\t\t}}>Sign In</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"overlay-panel overlay-right\">\n\t\t\t\t\t\t\t\t<h1>Hello, Friend!</h1>\n\t\t\t\t\t\t\t\t<p>Enter your personal details and start journey with us</p>\n\t\t\t\t\t\t\t\t<Button className=\"ghost\" onClick={() => {\n\t\t\t\t\t\t\t\t\tsetToggleSlides(!toggleSlides)\n\t\t\t\t\t\t\t\t\tsetPassword('')\n\t\t\t\t\t\t\t\t\tsetEmail('')\n\t\t\t\t\t\t\t\t\tsetErrors('')\n\t\t\t\t\t\t\t\t\t}}>Sign Up</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t)\n}\n","import { SET_AUTHENTICATED, SET_UNAUTHENTICATED } from '../types'\n\nconst initialState = {\n\tinfo: {},\n\tauthenticated: false\n}\n\nexport default function(state=initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_AUTHENTICATED:\t\t\t\n\t\t\treturn {\n        ...state,\n        authenticated: true,\n        info: action.payload,\n      };\n\t\tcase SET_UNAUTHENTICATED:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import {\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_ERRORS,\n  STOP_LOADING_UI,\n} from \"../types\";\n\nconst initialState = {\n\tloading: false,\n\terror: null\n}\n\nexport default function(state=initialState, action) {\n\tswitch (action.type) {\n    case SET_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true,\n      };\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}","import { LOADING_DATA, SET_ITEM } from \"../types\";\n\nconst initialState = {\n  data: [],\n  credentials: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        data: action.payload.filter(item=>!item.email),\n      };\n    case SET_ITEM: \n    console.log('OUTPUT: action.payload', action.payload)\n      return {\n        ...state,\n        credentials: action.payload\n      }\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport userReducer from './reducers/userReducer'\nimport uiReducer from './reducers/uiReducer'\nimport dataReducer from './reducers/dataReducer'\n\nconst initialState = {}\n\n// const middleware = [thunk] || [window.thunk.default]\n\n// const reducers = combineReducers({\n// \tuser: userReducer,\n// \tdata: dataReducer,\n// \tui: uiReducer\n// })\n\n// const store = createStore(\n// \treducers,\n// \tinitialState,\n// \tcompose(\n// \t\tapplyMiddleware(...middleware),\n// \t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// \t)\n// )\n\n// export default store\n\nconst reducers = combineReducers({\n\tuser: userReducer,\n\tdata: dataReducer,\n\tui: uiReducer\n})\n\nconst middleware = [\n\tapplyMiddleware(...[thunk] || [window.thunk.default]),\n\t...(window.__REDUX_DEVTOOLS_EXTENSION__ ? [window.__REDUX_DEVTOOLS_EXTENSION__()] : [])\n]\n\nconst store = createStore(\n\treducers,\n\tinitialState,\n\tcompose(...middleware)\n)\n\nexport default store","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport firebase from 'firebase'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport { logOutUser } from \"../../redux/actions/userActions\"\nimport store from \"../../redux/store\";\nimport diary from './img/paper.png'\nimport FunctionsIcon from \"@material-ui/icons/Functions\";\nimport { uploadImage } from '../../redux/actions/userActions'\n\nexport const Card = () => {\n\n\tconst authenticated = useSelector(state => state.user.authenticated)\n  const info = useSelector(state => state.user.info)\n  const dispatch = useDispatch()\n\n  const handleImageChange = event => {\n\t\tconst image = event.target.files[0]\n\t\tconst formData = new FormData()\n\t\tformData.append('image', image, image.name)\n\t\tdispatch(uploadImage(formData))\n\t}\n\n\tconst handleEditImage = () => {\n\t\tconst fileInput = document.getElementById('imageInput')\n\t\tfileInput.click()\n\t}\n\n\treturn (\n    authenticated && info !== undefined && (\n    <CardContainer\n      className=\"animate__animated animate__fadeInDownBig\"\n      style={{\n        display: \"inline-flex\",\n        justifyContent: \"space-evenly\",\n        alignItems: 'center',\n        width: \"100%\",\n        transition: \"all 1s ease-out\",\n      }}\n    >\n      <section>\n        <img className=\"img\" src={info.imageUrl} alt=\"avatar\" />\n      <div>\n        <h2>{info.name}</h2>\n        <p>{info.email}</p>\n        <p>Joined {moment(info.createdAt).fromNow()}</p>\n      </div>\n      <div className=\"social-container card\">\n        <input \n          type=\"file\"\n          id=\"imageInput\"\n          hidden=\"hidden\"\n          onChange={(event) => handleImageChange(event)}\n        />\n        <Link to=\"#\" className=\"icons\" onClick={handleEditImage}>\n          <i className=\"fas fa-users-cog\"></i>\n        </Link>  \n        <Link to=\"/table\" className=\"icons\">\n          <i className=\"fas fa-table\"></i>\n        </Link>\n        <Link to=\"/diagrams\" className=\"icons\">\n          <i className=\"fas fa-chart-bar\"></i>\n        </Link>\n        <Link\n          to=\"/authform\"\n          className=\"icons\"\n          onClick={() => {\n            // firebase.auth.signOut()\n            store.dispatch(logOutUser());\n          }}\n        >\n          <i className=\"fas fa-sign-out-alt\"></i>\n        </Link>\n      </div>\n    </section>\n    <div className=\"balance\">\n      <img src={diary} alt=\"diary\" />\n      <div className=\"context\">\n        <h1 style={{ color: \"green\" }}>earnings</h1>\n        <i className=\"fas fa-minus\"></i>\n        <h1 style={{ color: \"red\" }}>spending</h1>\n        <span className=\"span-line\"></span>\n        <FunctionsIcon style={{ color: \"var(--second-color)\" }} />\n      </div>\n    </div>\n    </CardContainer>\n  ))\n}\n\nconst CardContainer = styled.div`\n  .context {\n    justify-items: flex-end;\n    display: inline-grid;\n    transform: rotate(-8deg);\n    top: 20%;\n    left: 68%;\n    position: absolute;\n  }\n  img {\n    transform: rotate(5deg);\n  }\n  .span-line {\n    margin-top: 0.1rem;\n    height: 0.2rem;\n    width: 80%;\n    color: black;\n    background-color: black;\n  }\n  section {\n    display: inline-grid;\n    grid-template-columns: repeat(2, 1fr);\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    max-width: 300px;\n    max-height: 175px;\n    padding: 1em;\n    background: rgba(255, 255, 255, 0.2);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n    margin: 2rem;\n    border-radius: 3%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 100px 70px;\n    grid-template-areas:\n      \"a b\"\n      \"c c\";\n    justify-items: center;\n    align-items: end;\n  }\n  .img {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    border: 1px solid var(--main-color);\n    padding: 2px;\n    margin-right: 1rem;\n    grid-area: a;\n  }\n  div {\n    grid-area: b;\n    text-align: end;\n  }\n  h2 {\n    font-size: 1em;\n    text-transform: uppercase;\n    color: var(--second-color);\n  }\n  p {\n    margin: 0;\n    padding: 0;\n    font-size: 0.5em;\n    text-transform: uppercase;\n    color: var(--main-color);\n  }\n  .card {\n    display: inline-flex;\n    grid-area: c;\n    padding: 0.5em;\n  }\n  .social-container a:before,\n  .social-container a:after {\n    height: 35px !important;\n    width: 35px !important;\n  }\n`;\n","\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { Button } from '../components/layouts/Button'\nimport { Link } from 'react-router-dom';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { Calendar } from 'react-date-range'\nimport moment from 'moment'\nimport categoryURL from './layouts/categoryURL'\n// Redux\nimport { useDispatch, useSelector } from 'react-redux'\n// Material UI stuff\nimport {\n\tmakeStyles,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tSelect,\n\tMenuItem,\n\tFormControl\n\t} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: {\n\t\tmaxWidth: 345,\n\t},\n\tcontainer: {\n\t\tdisplay: \"grid\",\n\t\tjustifyContent: \"center\"\n\t},\n\tinput: {\n\t\tbackground: \"#eee\",\n\t\tpadding: \"12px 15px\",\n\t\tmargin: \"8px 0\",\n\t\twidth: \"100%\",\n\t\tborder: \"2px solid var(--third-color)\",\n\t\tborderRadius: \"5px\"\n\t},\n\ttitle: {\n\t\tbackgroundColor: \"var(--background)\",\n\t\t\"&>h2\": {\n\t\t\tfontFamily: [\"Architects Daughter\", \"cursive\"].join(\",\"),\n\t\t\tfontSize: \"2rem\",\n\t\t\tletterSpacing: \".9em\",\n\t\t\ttextAlign: \"center\"\n\t\t}\n\t}\n});\n\nexport default function InformCard(props) {\n  const classes = useStyles();\n\tconst [category, setCategory] = useState('')\n\tconst [description, setDescription] = useState('')\n\tconst [createdAt, setCreatedAt] = useState('')\n\tconst [price, setPrice] = useState('')\n\tconst [profit, setProfit] = useState('')\n\tconst [open, setOpen] = useState(false)\n\tconst [openCalendar, setOpenCalendar] = useState(false)\n\tconst credentials = useSelector(state => state.data.credentials) \n\tconst dispatch = useDispatch()\n\t// console.log(credentials)\n\tuseEffect(()=> {\n\t})\n  return (\n\t\tcredentials.length !== 0 &&\n\t\t<Fragment>\n\t\t\t<Link to=\"#\" onClick={()=>setOpen(true)} className=\"animate__animated animate__flipInX animate__delay-.5s\">\n        <i className=\"fas fa-info fa-2x\"></i>\n      </Link>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t\tfullWidth\n\t\t\t\tmaxWidth=\"sm\"\n\t\t\t>\n\t\t\t<DialogTitle className={classes.title}>Information</DialogTitle>\n\t\t\t\t<DialogContent style={{backgroundColor: \"var(--background)\"}}>\n\t\t\t\t\t<FormControl className={classes.container}>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tvalue={credentials.description}\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\tonChange={event => console.log(event.target.value)} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tlabelId=\"demo-simple-select-outlined-label\"\n\t\t\t\t\t\t\tid=\"demo-simple-select-outlined\"\n\t\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\t\t// onChange={handleChange}\n\t\t\t\t\t\t\tlabel=\"Age\"\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value={category}>\n\t\t\t\t\t\t\t\t<em>{category}</em>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={10}>Ten</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={20}>Twenty</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={30}>Thirty</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t<div onClick={()=> setOpenCalendar(true)}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tvalue={moment(credentials.createdAt).format('dddd MMM Do')}\n\t\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\t\tonChange={event => (event.target.value)}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tstyle={{cursor: \"pointer\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen={openCalendar}\n\t\t\t\t\t\t\tonClose={() => setOpenCalendar(false)}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tmaxWidth=\"sm\"\n\t\t\t\t\t\t\tstyle={{display: \"flex\",justifyContent: \"end\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\t\tdate={new Date()}\n\t\t\t\t\t\t\t\t\t// onChange={this.handleSelect}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"image\"\n\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\tsrc={credentials.imageUrl}\n\t\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\t\tonChange={event => (event.target.value)}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tstyle={{cursor: \"pointer\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\t\tvalue={credentials.price}\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\tonChange={event => (event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions style={{backgroundColor: \"var(--background)\"}}>\n\t\t\t\t\t<Button onClick={() => setOpen(false)} color=\"primary\">Cancel</Button>\n\t\t\t\t\t<Button onClick={(e) => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\tconst userDetails = {\n\t\t\t\t\t\t\t// bio,\n\t\t\t\t\t\t\t// website,\n\t\t\t\t\t\t\t// location\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// dispatch(editUserDetails(userDetails))\n\t\t\t\t\t\tsetOpen(false)\n\t\t\t\t\t}} color=\"primary\">Save</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</Fragment>\n\t)\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SET_ITEM } from '../redux/types'\nimport moment from 'moment'\nimport { Button } from '../components/layouts/Button'\nimport { \n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  AppBar,\n  Toolbar,\n  Typography,\n  InputBase\n } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Informcard from '../components/InformCard'\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    padding: \".5rem\",\n    display: \"grid\",\n    justifyContent: \"space-around\",\n  },\n  container: {\n    height: \"100%\",\n    minWidth: \"90vw\",\n    fontFamily: [\"Architects Daughter\", \"cursive\"].join(\",\"),\n    fontSize: \"1.1rem\",\n  },\n  bar: {\n    backgroundColor: \"var(--background)\",\n    margin: \"1.5rem\",\n    width: \"95vw\",\n    minHeight: \"5rem\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    color: \"whitesmoke\",\n    alignItems: \"center\",\n    padding: \"1rem\",\n    marginLeft: \"2rem\",\n  },\n  balance: {\n    color: \"var(--main-color)\",\n    fontFamily: [\"Architects Daughter\", \"cursive\"].join(\",\"),\n  },\n  toolbar: {\n    display: \"inline-flex\",\n    justifyContent: \"space-between\",\n  },\n  search: {\n    display: \"inline-flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    width: \"50%\",\n  },\n  input: {\n    display: \"inline-flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    width: \"60%\",\n    marginLeft: \"1rem\",\n  },\n  inputInput: {\n    border: \"2px solid var(--main-color)\",\n    borderRadius: \"20px\",\n    background: \"white\",\n    padding: \".5rem\",\n  },\n  inputRoot: {\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    fontFamily: [\"Architects Daughter\", \"cursive\"].join(\",\"),\n    fontSize: \"1.1rem\",\n  },\n  cell: {\n    fontFamily: [\"Architects Daughter\", \"cursive\"].join(\",\"),\n    fontSize: \"1.1rem\",\n  },\n  row: {\n    cursor: \"pointer\", \n    transition: \"transform ease-in-out .3s\",\n    \"&:hover\": {\n      boxShadow: \"inset 4px 4px 6px -1px rgba(0,0,0,0.2)\",\n      border: \"1px solid var(--second-color)\",\n      transform: \"scale(.97) translateY(2px)\",\n      borderRadius: \"10px\"\n    },\n    '&:nth-child(even)': {\n      backgroundColor: \"var(--background)\"\n    }\n  },\n  tableImg: {\n    width: \"75px\",\n    borderRadius: \"15px\",\n    border: \"1px solid var(--third-color)\"\n  },\n  headTable: {\n    fontFamily: [\"Architects Daughter\", \"cursive\"].join(\",\"),\n    fontSize: \"1.5rem\",\n    backgroundColor: 'var(--background)',\n    color: 'var(--main-color)'\n  },\n  addTable: {\n    backgroundColor: 'var(--background)'\n  },\n  input: {\n    width: \"60%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n});\n\nexport const StickyHeadTable = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const state = useSelector(state => state.data.data)\n  const [id, setId] = useState(null)\n  const [toolBtn, setToolBtn] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  function* formatDate(state) {\n  yield state.map(item=>item.createdAt=moment(item.createdAt).format(\"DD/MM/YYYY\"))\n  yield state.map(item=>item.createdAt=moment(item.createdAt).format(\"DD-MM-YYYY hh:mm:ss\"))\n  yield state.map(item=>item.createdAt=moment(item.createdAt).format(\"dddd of MMMM\"))\n  yield state.map(item=>item.createdAt=moment(item.createdAt).fromNow())\n}\n\n  return (\n    <>\n      <AppBar position=\"static\" className={classes.bar}>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.search}>\n            <Button className={classes.button}>\n              Add\n              <i\n                className=\"fas fa-plus-circle\"\n                style={{ marginLeft: \".5rem\" }}\n              />\n            </Button>\n            <div className={classes.input}>\n              <i\n                className=\"fas fa-search-dollar fa-2x\"\n                style={{ color: \"var(--main-color)\" }}\n              />\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n          </div>\n          <Typography className={classes.balance} variant=\"h5\" noWrap>\n            balance:\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {['description', 'category', 'date', 'image', 'cost'].map((item, index) => (\n                  <TableCell\n                    key={index}\n                    align=\"left\"\n                    style={{ minWidth: 170 }}\n                    className={classes.headTable}\n                    variant='head'\n                  >\n                    {item}\n                  </TableCell>\n                ))}\n                <TableCell style={{backgroundColor: \"var(--background)\"}} className=\"tools\">\n                {toolBtn && <Informcard />}\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {state\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(item => \n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={item.itemId}\n                      data-id={item.itemId}\n                      className={classes.row}\n                      onClick={(e)=>{\n                        setToolBtn(true)\n                        setId(e.target.parentNode.getAttribute(\"data-id\"))\n                        dispatch({type: SET_ITEM, payload: item})\n                      }}\n                    >\n                      <TableCell align=\"justify\" className={classes.cell}>\n                        {item.description}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.cell}>\n                        {item.category}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.cell}>\n                        {moment(item.createdAt).format('dddd MMM Do')}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.cell}>\n                        <img src={item.imageUrl} alt=\"image\" className={classes.tableImg} />\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.cell} \n                        style={{color: item.profit?'var(--third-color)':'var(--second-color)', maxWidth: 100}}>\n                        {item.price}\n                      </TableCell>\n                      <TableCell className=\"tools\">\n                        {toolBtn && id === item.itemId &&\n                        <Link to=\"#\" id=\"recycle\" className=\"animate__animated animate__flipInX animate__delay-.5s\">\n                          <i className=\"fas fa-recycle fa-2x\"></i>\n                        </Link>}\n                      </TableCell>\n                    </TableRow>\n                  )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={state.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </>\n  );\n}\n","import React from 'react'\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { useSelector } from \"react-redux\";\n\nexport const Diagrams = () => {\n  const data = useSelector(state => state.data.data)\n  // console.log('OUTPUT: Diagrams -> state.data.data', price)\n  const charData = {\n        labels: [],\n        datasets: [\n          {\n            label: \"Categories\",\n            data: [],\n            backgroundColor: 'red'\n          }\n        ]\n      }\n    charData.labels = [...data.filter(item=>item.category)]\n  console.log('OUTPUT: Diagrams -> data', data.forEach(item=>item.category))\n  return (\n    <>\n      <Bar\n        data={charData}\n        width={100}\n        height={50}\n        options={{ maintainAspectRatio: false }}\n      />\n    </>\n  )\n}","import React from 'react'\nimport Home from './pages/Home'\nimport { Navbar } from './components/Navbar'\nimport { AuthForm } from './pages/AuthForm'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Card } from './components/layouts/Card'\nimport { StickyHeadTable } from \"./pages/Table\";\nimport { Diagrams } from './pages/Diagrams'\nimport './App.css'\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\n/* REDUX */\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { logOutUser, getUser } from './redux/actions/userActions'\nimport { getData } from './redux/actions/dataActions'\n\n// axios.defaults.baseURL = \"https://us-central1-make-and-save-c1e7a.cloudfunctions.net/api\"\naxios.defaults.baseURL = \"http://localhost:5000/make-and-save-c1e7a/us-central1/api\"\n\nconst token = localStorage.getItem('DBAuthToken') || undefined\nif (token) {\n  const decodedToken = jwtDecode(token)\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logOutUser())\n    window.location.href = '/'\n  }\n  axios.defaults.headers.common['Authorization'] = token\n  store.dispatch(getUser())\n  store.dispatch(getData())\n}\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <>\n            <Navbar />\n            <Card />\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/table\" component={StickyHeadTable} />\n            <Route exact path=\"/authform\" component={AuthForm} />\n            <Route exact path=\"/diagrams\" component={Diagrams} />\n          </>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n      <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}